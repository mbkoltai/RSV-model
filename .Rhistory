ggplot(sum_inf_epiyear_age) + geom_hpline(aes(x=factor(epi_year),y=attack_rate_perc),width=0.9,size=1) + ylab("attack rate % age group") +
facet_wrap(~agegroup_name,scales="free") +
geom_hline(data=estim_attack_rates %>% pivot_longer(!agegroup_name) %>% filter(name!="median_est"),
aes(yintercept=value),size=1/3,color="red") + theme_bw() + standard_theme
estim_attack_rates %>% pivot_longer(!agegroup_name) %>% filter(name!="median_est")
unique(sum_inf_epiyear_age$agegroup_name)
estim_attack_rates <- data.frame(agegroup_name=unique(sum_inf_epiyear_age$agegroup_name),median_est=c(rep(65,4),rep(40,4),10,8,5)) %>%
mutate(min_est=median_est*0.5,max_est=median_est*1.5)
ggplot(sum_inf_epiyear_age) + geom_hpline(aes(x=factor(epi_year),y=attack_rate_perc),width=0.9,size=1) + ylab("attack rate % age group") +
facet_wrap(~agegroup_name,scales="free") +
geom_hline(data=estim_attack_rates %>% pivot_longer(!agegroup_name) %>% filter(name!="median_est"),
aes(yintercept=value),size=1/3,color="red") + theme_bw() + standard_theme
simul_timeline_dates
rm(df_seas_forc_npi)
rm(seas_lims)
npi_dates
fcn_plot_seas_forc <- function(simul_timeline,forcingvector_npi,seas_lims,npidates,date_resol){
df_seas_forc_npi=data.frame(date=simul_timeline, forcing=forcingvector_npi) %>% mutate(year=year(date),week=week(date))
ggplot(df_seas_forc_npi,aes(x=date,y=forcing)) + geom_line() +
geom_vline(data=df_seas_forc_npi %>% filter(week %in% seas_lims) %>% group_by(week,year) %>% filter(date==min(date)),
aes(xintercept=date),linetype="dashed",color="blue",size=1/4) + scale_x_date(date_breaks=date_resol,expand=expansion(0.01,0)) +
geom_rect(xmin=npidates[1],xmax=npidates[2],ymin=-Inf,ymax=Inf,fill="pink",alpha=0.01) + theme_bw() + standard_theme
}
fcn_plot_seas_forc <- function(simul_timeline,forcingvector_npi,seas_lims_wks,npidates,date_resol){
df_seas_forc_npi=data.frame(date=simul_timeline, forcing=forcingvector_npi) %>% mutate(year=year(date),week=week(date))
ggplot(df_seas_forc_npi,aes(x=date,y=forcing)) + geom_line() +
geom_vline(data=df_seas_forc_npi %>% filter(week %in% seas_lims_wks) %>% group_by(week,year) %>% filter(date==min(date)),
aes(xintercept=date),linetype="dashed",color="blue",size=1/4) + scale_x_date(date_breaks=date_resol,expand=expansion(0.01,0)) +
geom_rect(xmin=npidates[1],xmax=npidates[2],ymin=-Inf,ymax=Inf,fill="pink",alpha=0.01) + theme_bw() + standard_theme
}
fcn_plot_seas_forc(simul_timeline_dates,forcing_vector_npi,seas_lims_wks=c(7,42),npi_dates,"3 month")
fcn_plot_seas_forc(simul_timeline_dates,forcing_vector_npi,seas_lims_wks=c(7,42),npi_dates,"3 month")
length(simul_timeline_dates)
df_seas_forc_npi=data.frame(date=simul_timeline_dates, forcing=forcing_vector_npi) %>% mutate(year=year(date),week=week(date))
simul_start_end
df_seas_forc_npi=data.frame(date=seq(simul_start_end[1],simul_start_end[2],by=1),forcing=forcing_vector_npi) %>%
mutate(year=year(date),week=week(date))
ggplot(df_seas_forc_npi,aes(x=date,y=forcing)) + geom_line() +
geom_vline(data=df_seas_forc_npi %>% filter(week %in% c(7,42)) %>% group_by(week,year) %>% filter(date==min(date)),
aes(xintercept=date),linetype="dashed",color="blue",size=1/4) + scale_x_date(date_breaks="3 month",expand=expansion(0.01,0)) +
geom_rect(xmin=npi_dates[1],xmax=npi_dates[2],ymin=-Inf,ymax=Inf,fill="pink",alpha=0.01) + theme_bw() + standard_theme
simul_start_end
source("fcns/RSV_model_functions.R")
fcn_plot_seas_forc(simul_start_end,forcing_vector_npi,seas_lims_wks=c(7,42),npi_dates,"3 month")
forcing_strength=0.33; npi_dates=as.Date(c("2020-03-26","2021-04-01")); years_pre_post_npi=c(9,2)
g(n_years,timesteps,simul_start_end,forcing_vector_npi) %=% fun_shutdown_seasforc(npi_dates,years_pre_post_npi,
season_width_wks=2,init_mt_day="06-01",peak_week=44,forcing_above_baseline=0.25,npireduc_strength=0.5)
# plot seasonal forcing
fcn_plot_seas_forc(simul_start_end,forcing_vector_npi,seas_lims_wks=c(7,42),npi_dates,"3 month")
initvals_sirs_model=fcn_set_initconds(rsv_age_groups,init_set=c("previous","fromscratch")[1],init_cond_src=c("output","file")[1],
ode_solution,init_seed=10,seed_vars="all",filename="simul_output/df_ode_solution_UK_multiple_adult_grps.RDS")
forcing_strength=0.33; npi_dates=as.Date(c("2020-03-26","2021-04-01")); years_pre_post_npi=c(4,2)
g(n_years,timesteps,simul_start_end,forcing_vector_npi) %=% fun_shutdown_seasforc(npi_dates,years_pre_post_npi,
season_width_wks=2,init_mt_day="06-01",peak_week=44,forcing_above_baseline=0.25,npireduc_strength=0.5)
# plot seasonal forcing
fcn_plot_seas_forc(simul_start_end,forcing_vector_npi,seas_lims_wks=c(7,42),npi_dates,"3 month")
# SAVE: ggsave(paste0("simul_output/NPI_y",npi_year,"_on",preseas_npi_on,"w_off",postseas_npi_off,"w.png"),units="cm",height=10,width=20)
# INITIAL CONDITIONS. # introduce stationary state as init state? | init_set: "previous" or anything else
initvals_sirs_model=fcn_set_initconds(rsv_age_groups,init_set=c("previous","fromscratch")[1],init_cond_src=c("output","file")[1],
ode_solution,init_seed=10,seed_vars="all",filename="simul_output/df_ode_solution_UK_multiple_adult_grps.RDS")
params=list(list(birth_rates,death_rates),K_m,contmatr_rowvector,inf_vars_inds,susc_vars_inds,elem_time_step,delta_susc)
# interpolation fcns for seas forcing & extern introds
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
# how many introductions every 30 days?
approx_introd <- approxfun(data.frame(t=timesteps,as.numeric(timesteps %% 30==0)*5))
tm<-proc.time(); ode_sol<-lsoda(initvals_sirs_model,timesteps,func=sirs_seasonal_forc,parms=params); round(proc.time()-tm,2)
# reshape data | # check size of objs: fcn_objs_mem_use(1)
g(final_pop,ode_solution,df_cases_infs) %=% fun_process_simul_output(ode_sol,varname_list,incidvar="newinf",incid_only=TRUE,
init_date=simul_start_end[1],n_age,n_inf,rsv_age_groups,neg_thresh=-0.01)
sel_weeks <- df_cases_infs %>% mutate(week=week(date),year=year(date)) %>% filter(week %in% c(9,41,49)) %>% group_by(year,agegroup,week) %>%
filter(date==min(date) & infection=="infection #1"); varname=c("value_fract","value")[2]
ggplot(df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  ) ) +
# geom_line(aes(x=date,y=value_fract*1e2,color=infection)) +
geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=6),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F) +
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0)) + scale_y_continuous(expand=expansion(0.01,0)) +theme_bw() +standard_theme
sel_weeks <- df_cases_infs %>% mutate(week=week(date),year=year(date)) %>% filter(week %in% c(9,41,49)) %>% group_by(year,agegroup,week) %>%
filter(date==min(date) & infection=="infection #1"); varname=c("value_fract","value")[2]
ggplot(df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  ) ) +
# geom_line(aes(x=date,y=value_fract*1e2,color=infection)) +
geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=6),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F) +
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0)) + scale_y_continuous(expand=expansion(0.01,0)) +theme_bw() +standard_theme
unique(sum_inf_epiyear_age$agegroup_name)
rsv_age_groups$agegroup_name
paste0("age=",rsv_age_groups$agegroup_name,"yr")
paste0("age=",rsv_age_groups$agegroup_name,"yr")
unique(sum_inf_epiyear_age$agegroup_name)
estim_attack_rates <- data.frame(agegroup_name=paste0("age=",rsv_age_groups$agegroup_name,"yr"),
median_est=c(rep(65,4),rep(40,4),10,8,5)) %>% mutate(min_est=median_est*0.5,max_est=median_est*1.5)
estim_attack_rates
sum_inf_epiyear_age=left_join(df_cases_infs %>% mutate(year=year(date)) %>%
mutate(epi_year=ifelse(date>ymd(paste(year(date),"-07-01")), year(date), year(date)-1) ) %>% # paste0(year(date),"_",year(date)+1),
group_by(epi_year,agegroup_name,agegroup) %>% summarise(value=sum(value)) %>% group_by(agegroup) %>% filter(epi_year>min(epi_year)),
final_pop,by="agegroup") %>% mutate(attack_rate_perc=100*value/final)
# plot
ggplot(sum_inf_epiyear_age) + geom_hpline(aes(x=factor(epi_year),y=attack_rate_perc),width=0.9,size=1) + ylab("attack rate % age group") +
facet_wrap(~agegroup_name,scales="free") +
geom_hline(data=estim_attack_rates %>% pivot_longer(!agegroup_name) %>% filter(name!="median_est"),
aes(yintercept=value),size=1/3,color="red") + theme_bw() + standard_theme
scan_params=list(susc=seq(0.06,0.11,length.out=4),expdep=1,agedep=c(1.1,1.3,1.6,2.1),t_npi=c(0,2,4),seasf=c(0.5,1,2))
param_table=round(expand.grid(scan_params),3); colnames(param_table)=names(scan_params)
param_table
c(0.27,0.03,0.01)/5
agedep_fact=1; delta_primary=c(0.09,0.07,0.05)/1.6
# c(0.27,0.03,0.01)/5 # c(0.21,0.11,0.01)/5 # c(0.09,0.07,0.05)/1.6 # rep(0.15,3) # rep(0.09,3)
delta_susc=sapply(1:n_age, function(x) {delta_primary/((agedep_fact^(x-1))*rsv_age_groups$value[x])})
delta_susc_prop=delta_susc*matrix(rep(rsv_age_groups$value,3),nrow=3,byrow=T)
fcn_plot_suscept_table(fcn_suscept_agedeptable(rsv_age_groups,delta_susc,n_inf))
R0_calc_SIRS(C_m,delta_susc_prop,rho,n_inf)
agedep_fact=1; delta_primary=c(0.09,0.07,0.05)/2
# c(0.27,0.03,0.01)/5 # c(0.21,0.11,0.01)/5 # c(0.09,0.07,0.05)/1.6 # rep(0.15,3) # rep(0.09,3)
delta_susc=sapply(1:n_age, function(x) {delta_primary/((agedep_fact^(x-1))*rsv_age_groups$value[x])})
delta_susc_prop=delta_susc*matrix(rep(rsv_age_groups$value,3),nrow=3,byrow=T)
### PLOT susceptibility:
# fcn_plot_suscept_table(fcn_suscept_agedeptable(rsv_age_groups,delta_susc,n_inf))
# ggsave(paste0("simul_output/suscept_age_dep/",agedep_fact,"delta_prim",unique(delta_primary),".png"),width=32,height=22,units="cm")
# calculate R0 (at max seasonal forcing=1)
R0_calc_SIRS(C_m,delta_susc_prop,rho,n_inf)
params=list(list(birth_rates,death_rates),K_m,contmatr_rowvector,inf_vars_inds,susc_vars_inds,elem_time_step,delta_susc)
# interpolation fcns for seas forcing & extern introds
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
# how many introductions every 30 days?
approx_introd <- approxfun(data.frame(t=timesteps,as.numeric(timesteps %% 30==0)*5))
tm<-proc.time(); ode_sol<-lsoda(initvals_sirs_model,timesteps,func=sirs_seasonal_forc,parms=params); round(proc.time()-tm,2)
# reshape data | # check size of objs: fcn_objs_mem_use(1)
g(final_pop,ode_solution,df_cases_infs) %=% fun_process_simul_output(ode_sol,varname_list,incidvar="newinf",incid_only=TRUE,
init_date=simul_start_end[1],n_age,n_inf,rsv_age_groups,neg_thresh=-0.01)
sel_weeks <- df_cases_infs %>% mutate(week=week(date),year=year(date)) %>% filter(week %in% c(9,41,49)) %>% group_by(year,agegroup,week) %>%
filter(date==min(date) & infection=="infection #1"); varname=c("value_fract","value")[2]
ggplot(df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  ) ) +
# geom_line(aes(x=date,y=value_fract*1e2,color=infection)) +
geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=6),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F) +
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0)) + scale_y_continuous(expand=expansion(0.01,0)) +theme_bw() +standard_theme
ggplot(df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  ) ) +
# geom_line(aes(x=date,y=value_fract*1e2,color=infection)) +
geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
#geom_vline(data=sel_weeks%>%filter(agegroup<=6),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F)+
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0)) + scale_y_continuous(expand=expansion(0.01,0))+theme_bw()+standard_theme
agedep_fact=1; delta_primary=c(0.09,0.07,0.05)/3
# c(0.27,0.03,0.01)/5 # c(0.21,0.11,0.01)/5 # c(0.09,0.07,0.05)/1.6 # rep(0.15,3) # rep(0.09,3)
delta_susc=sapply(1:n_age, function(x) {delta_primary/((agedep_fact^(x-1))*rsv_age_groups$value[x])})
delta_susc_prop=delta_susc*matrix(rep(rsv_age_groups$value,3),nrow=3,byrow=T)
### PLOT susceptibility:
# fcn_plot_suscept_table(fcn_suscept_agedeptable(rsv_age_groups,delta_susc,n_inf))
# ggsave(paste0("simul_output/suscept_age_dep/",agedep_fact,"delta_prim",unique(delta_primary),".png"),width=32,height=22,units="cm")
# calculate R0 (at max seasonal forcing=1)
R0_calc_SIRS(C_m,delta_susc_prop,rho,n_inf)
agedep_fact=1; delta_primary=c(0.09,0.07,0.05)/2.5
# c(0.27,0.03,0.01)/5 # c(0.21,0.11,0.01)/5 # c(0.09,0.07,0.05)/1.6 # rep(0.15,3) # rep(0.09,3)
delta_susc=sapply(1:n_age, function(x) {delta_primary/((agedep_fact^(x-1))*rsv_age_groups$value[x])})
delta_susc_prop=delta_susc*matrix(rep(rsv_age_groups$value,3),nrow=3,byrow=T)
### PLOT susceptibility:
# fcn_plot_suscept_table(fcn_suscept_agedeptable(rsv_age_groups,delta_susc,n_inf))
# ggsave(paste0("simul_output/suscept_age_dep/",agedep_fact,"delta_prim",unique(delta_primary),".png"),width=32,height=22,units="cm")
# calculate R0 (at max seasonal forcing=1)
R0_calc_SIRS(C_m,delta_susc_prop,rho,n_inf)
params=list(list(birth_rates,death_rates),K_m,contmatr_rowvector,inf_vars_inds,susc_vars_inds,elem_time_step,delta_susc)
# interpolation fcns for seas forcing & extern introds
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
# how many introductions every 30 days?
approx_introd <- approxfun(data.frame(t=timesteps,as.numeric(timesteps %% 30==0)*5))
tm<-proc.time(); ode_sol<-lsoda(initvals_sirs_model,timesteps,func=sirs_seasonal_forc,parms=params); round(proc.time()-tm,2)
# reshape data | # check size of objs: fcn_objs_mem_use(1)
g(final_pop,ode_solution,df_cases_infs) %=% fun_process_simul_output(ode_sol,varname_list,incidvar="newinf",incid_only=TRUE,
init_date=simul_start_end[1],n_age,n_inf,rsv_age_groups,neg_thresh=-0.01)
ggplot(df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  ) ) +
# geom_line(aes(x=date,y=value_fract*1e2,color=infection)) +
geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
#geom_vline(data=sel_weeks%>%filter(agegroup<=6),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F)+
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0)) + scale_y_continuous(expand=expansion(0.01,0))+theme_bw()+standard_theme
df_cases_infs %>% # filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  )
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
# geom_line(aes(x=date,y=value_fract*1e2,color=infection)) +
# geom_vline(data=sel_weeks%>%filter(agegroup<=6),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F)+
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0)) + scale_y_continuous(expand=expansion(0.01,0))+theme_bw()+standard_theme
sum_inf_epiyear_age=left_join(df_cases_infs %>% mutate(year=year(date)) %>%
mutate(epi_year=ifelse(date>ymd(paste(year(date),"-07-01")), year(date), year(date)-1) ) %>% # paste0(year(date),"_",year(date)+1),
group_by(epi_year,agegroup_name,agegroup) %>% summarise(value=sum(value)) %>% group_by(agegroup) %>% filter(epi_year>min(epi_year)),
final_pop,by="agegroup") %>% mutate(attack_rate_perc=100*value/final)
# plot
ggplot(sum_inf_epiyear_age) + geom_hpline(aes(x=factor(epi_year),y=attack_rate_perc),width=0.9,size=1) + ylab("attack rate % age group") +
facet_wrap(~agegroup_name,scales="free") +
geom_hline(data=estim_attack_rates %>% pivot_longer(!agegroup_name) %>% filter(name!="median_est"),
aes(yintercept=value),size=1/3,color="red") + theme_bw() + standard_theme
forcing_strength=0.33; npi_dates=as.Date(c("2020-03-26","2021-04-01")); years_pre_post_npi=c(7,2)
g(n_years,timesteps,simul_start_end,forcing_vector_npi) %=% fun_shutdown_seasforc(npi_dates,years_pre_post_npi,
season_width_wks=2,init_mt_day="06-01",peak_week=44,forcing_above_baseline=0.25,npireduc_strength=0.5)
params=list(list(birth_rates,death_rates),K_m,contmatr_rowvector,inf_vars_inds,susc_vars_inds,elem_time_step,delta_susc)
# interpolation fcns for seas forcing & extern introds
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
# how many introductions every 30 days?
approx_introd <- approxfun(data.frame(t=timesteps,as.numeric(timesteps %% 30==0)*5))
tm<-proc.time(); ode_sol<-lsoda(initvals_sirs_model,timesteps,func=sirs_seasonal_forc,parms=params); round(proc.time()-tm,2)
# reshape data | # check size of objs: fcn_objs_mem_use(1)
g(final_pop,ode_solution,df_cases_infs) %=% fun_process_simul_output(ode_sol,varname_list,incidvar="newinf",incid_only=TRUE,
init_date=simul_start_end[1],n_age,n_inf,rsv_age_groups,neg_thresh=-0.01)
df_cases_infs %>% # filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  )
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0)) + scale_y_continuous(expand=expansion(0.01,0))+ theme_bw() + standard_theme
sum_inf_epiyear_age=left_join(df_cases_infs %>% mutate(year=year(date)) %>%
mutate(epi_year=ifelse(date>ymd(paste(year(date),"-07-01")), year(date), year(date)-1) ) %>% # paste0(year(date),"_",year(date)+1),
group_by(epi_year,agegroup_name,agegroup) %>% summarise(value=sum(value)) %>% group_by(agegroup) %>% filter(epi_year>min(epi_year)),
final_pop,by="agegroup") %>% mutate(attack_rate_perc=100*value/final)
ggplot(sum_inf_epiyear_age) + geom_hpline(aes(x=factor(epi_year),y=attack_rate_perc),width=0.9,size=1) + ylab("attack rate % age group") +
facet_wrap(~agegroup_name,scales="free") +
geom_hline(data=estim_attack_rates %>% pivot_longer(!agegroup_name) %>% filter(name!="median_est"),
aes(yintercept=value),size=1/3,color="red") + theme_bw() + standard_theme
ggplot(sum_inf_epiyear_age) + geom_hpline(aes(x=factor(epi_year),y=attack_rate_perc),width=0.9,size=1) + ylab("attack rate % age group") +
facet_wrap(~agegroup_name,scales="free") + theme_bw() + standard_theme +
geom_hline(data=estim_attack_rates %>% pivot_longer(!agegroup_name) %>% filter(name!="median_est"),
aes(yintercept=value),size=1/3,color="red")
R0_calc_SIRS(C_m,delta_susc_prop,rho,n_inf)
agedep_fact=1; delta_primary=c(0.09,0.07,0.05)/2.8
# c(0.27,0.03,0.01)/5 # c(0.21,0.11,0.01)/5 # c(0.09,0.07,0.05)/1.6 # rep(0.15,3) # rep(0.09,3)
delta_susc=sapply(1:n_age, function(x) {delta_primary/((agedep_fact^(x-1))*rsv_age_groups$value[x])})
delta_susc_prop=delta_susc*matrix(rep(rsv_age_groups$value,3),nrow=3,byrow=T)
### PLOT susceptibility:
# fcn_plot_suscept_table(fcn_suscept_agedeptable(rsv_age_groups,delta_susc,n_inf))
# ggsave(paste0("simul_output/suscept_age_dep/",agedep_fact,"delta_prim",unique(delta_primary),".png"),width=32,height=22,units="cm")
# calculate R0 (at max seasonal forcing=1)
R0_calc_SIRS(C_m,delta_susc_prop,rho,n_inf)
agedep_fact=1; delta_primary=c(0.09,0.07,0.05)/2.9
# c(0.27,0.03,0.01)/5 # c(0.21,0.11,0.01)/5 # c(0.09,0.07,0.05)/1.6 # rep(0.15,3) # rep(0.09,3)
delta_susc=sapply(1:n_age, function(x) {delta_primary/((agedep_fact^(x-1))*rsv_age_groups$value[x])})
delta_susc_prop=delta_susc*matrix(rep(rsv_age_groups$value,3),nrow=3,byrow=T)
### PLOT susceptibility:
# fcn_plot_suscept_table(fcn_suscept_agedeptable(rsv_age_groups,delta_susc,n_inf))
# ggsave(paste0("simul_output/suscept_age_dep/",agedep_fact,"delta_prim",unique(delta_primary),".png"),width=32,height=22,units="cm")
# calculate R0 (at max seasonal forcing=1)
R0_calc_SIRS(C_m,delta_susc_prop,rho,n_inf)
params=list(list(birth_rates,death_rates),K_m,contmatr_rowvector,inf_vars_inds,susc_vars_inds,elem_time_step,delta_susc)
# interpolation fcns for seas forcing & extern introds
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
# how many introductions every 30 days?
approx_introd <- approxfun(data.frame(t=timesteps,as.numeric(timesteps %% 30==0)*5))
tm<-proc.time(); ode_sol<-lsoda(initvals_sirs_model,timesteps,func=sirs_seasonal_forc,parms=params); round(proc.time()-tm,2)
# reshape data | # check size of objs: fcn_objs_mem_use(1)
g(final_pop,ode_solution,df_cases_infs) %=% fun_process_simul_output(ode_sol,varname_list,incidvar="newinf",incid_only=TRUE,
init_date=simul_start_end[1],n_age,n_inf,rsv_age_groups,neg_thresh=-0.01)
elem_time_step
elem_time_step
delta_susc
params=list(list(birth_rates,death_rates),K_m,contmatr_rowvector,inf_vars_inds,susc_vars_inds,delta_susc)
# interpolation fcns for seas forcing & extern introds
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
# how many introductions every 30 days?
approx_introd <- approxfun(data.frame(t=timesteps,as.numeric(timesteps %% 30==0)*5))
tm<-proc.time(); ode_sol<-lsoda(initvals_sirs_model,timesteps,func=sirs_seasonal_forc,parms=params); round(proc.time()-tm,2)
source("fcns/RSV_model_functions.R")
params=list(list(birth_rates,death_rates),K_m,contmatr_rowvector,inf_vars_inds,susc_vars_inds,delta_susc)
# interpolation fcns for seas forcing & extern introds
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
# how many introductions every 30 days?
approx_introd <- approxfun(data.frame(t=timesteps,as.numeric(timesteps %% 30==0)*5))
tm<-proc.time(); ode_sol<-lsoda(initvals_sirs_model,timesteps,func=sirs_seasonal_forc,parms=params); round(proc.time()-tm,2)
g(final_pop,ode_solution,df_cases_infs) %=% fun_process_simul_output(ode_sol,varname_list,incidvar="newinf",incid_only=TRUE,
init_date=simul_start_end[1],n_age,n_inf,rsv_age_groups,neg_thresh=-0.01)
head(df_cases_infs,2)
df_cases_infs %>% # filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  )
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0)) + scale_y_continuous(expand=expansion(0.01,0))+ theme_bw() + standard_theme
initvals_sirs_model=fcn_set_initconds(rsv_age_groups,init_set=c("previous","fromscratch")[1],init_cond_src=c("output","file")[1],
ode_solution,init_seed=10,seed_vars="all",filename="simul_output/df_ode_solution_UK_multiple_adult_grps.RDS")
params=list(list(birth_rates,death_rates),K_m,contmatr_rowvector,inf_vars_inds,susc_vars_inds,delta_susc)
# interpolation fcns for seas forcing & extern introds
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
# how many introductions every 30 days?
approx_introd <- approxfun(data.frame(t=timesteps,as.numeric(timesteps %% 30==0)*5))
tm<-proc.time(); ode_sol<-lsoda(initvals_sirs_model,timesteps,func=sirs_seasonal_forc,parms=params); round(proc.time()-tm,2)
# reshape data | # check size of objs: fcn_objs_mem_use(1)
g(final_pop,ode_solution,df_cases_infs) %=% fun_process_simul_output(ode_sol,varname_list,incidvar="newinf",incid_only=TRUE,
init_date=simul_start_end[1],n_age,n_inf,rsv_age_groups,neg_thresh=-0.01)
df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  )
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=6),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F)+
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0)) + scale_y_continuous(expand=expansion(0.01,0))+ theme_bw() + standard_theme
df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  )
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=6),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F)+
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0)) + scale_y_continuous(expand=expansion(0.01,0))+ theme_bw() + standard_theme
df_cases_infs
df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  )
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=6),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F)+
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0)) + scale_y_continuous(expand=expansion(0.01,0))+ theme_bw() + standard_theme
sel_weeks <- df_cases_infs %>% mutate(week=week(date),year=year(date)) %>% filter(week %in% c(9,41,49)) %>% group_by(year,agegroup,week) %>%
filter(date==min(date) & infection=="infection #1"); varname=c("value_fract","value")[2]
sel_weeks
df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  )
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=6),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F)+
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0)) + scale_y_continuous(expand=expansion(0.01,0))+ theme_bw() + standard_theme
df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  )
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group")
df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  ) %>%
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=6),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F)+
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0)) + scale_y_continuous(expand=expansion(0.01,0))+ theme_bw() + standard_theme
sum_inf_epiyear_age=left_join(df_cases_infs %>% mutate(year=year(date)) %>%
mutate(epi_year=ifelse(date>ymd(paste(year(date),"-07-01")), year(date), year(date)-1) ) %>% # paste0(year(date),"_",year(date)+1),
group_by(epi_year,agegroup_name,agegroup) %>% summarise(value=sum(value)) %>% group_by(agegroup) %>% filter(epi_year>min(epi_year)),
final_pop,by="agegroup") %>% mutate(attack_rate_perc=100*value/final)
# plot
ggplot(sum_inf_epiyear_age) + geom_hpline(aes(x=factor(epi_year),y=attack_rate_perc),width=0.9,size=1) + ylab("attack rate % age group") +
facet_wrap(~agegroup_name,scales="free") + theme_bw() + standard_theme +
geom_hline(data=estim_attack_rates %>% pivot_longer(!agegroup_name) %>% filter(name!="median_est"),
aes(yintercept=value),size=1/3,color="red")
isoweek(ymd("2021-10-01"))
isoweek(ymd("2021-01-01"))
isoweek(ymd("2021-01-06"))
week(ymd("2021-01-06"))
week(ymd("2021-01-02"))
week(ymd("2021-01-11"))
week(ymd("2021-11-11"))
resp_detects_weekly_all_age
resp_detects_weekly_all_age_means_shares=left_join(
resp_detects_weekly_all_age %>% group_by(epi_year,on_off_season) %>% summarise(mean_on_off=mean(RSV)) %>%
pivot_wider(names_from=on_off_season,values_from=mean_on_off,names_prefix="mean_"),
resp_detects_weekly_all_age %>% group_by(epi_year) %>% filter(epi_year>1&epi_year<8) %>% summarise(season_share=unique(season_share)) ) %>%
mutate(on_off_ratio=mean_on/mean_off)
resp_detects_weekly_all_age_means_shares
head(resp_detects_weekly_all_age,2)
resp_detects_weekly_all_age_means_shares
7>=9
sum_inf_epiyear_age=left_join(
df_cases_infs %>% mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)>=9 & week(date)<=41,"in","out")) %>% group_by(epi_year,agegroup_name,agegroup) %>%
summarise(value=sum(value),value_in_seas=sum(value[in_out_season=="in"]),) %>% group_by(agegroup) %>%
filter(epi_year>min(epi_year)),final_pop,by="agegroup") %>% mutate(attack_rate_perc=100*value/final)
View(sum_inf_epiyear_age)
head(df_cases_infs %>% mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)>=9 & week(date)<=41,"in","out")),2)
View(df_cases_infs %>% mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)>=9 & week(date)<=41,"in","out")))
head(df_cases_infs %>% mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)>=9 & week(date)<=41,"in","out")) %>% group_by(epi_year,agegroup_name,agegroup) %>%
summarise(value=sum(value),value_in_seas=sum(value[in_out_season=="in"])),2)
sum_inf_epiyear_age=left_join(
df_cases_infs %>% mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)>=9 & week(date)<=41,"in","out")) %>% group_by(epi_year,agegroup_name,agegroup) %>%
summarise(value=sum(value),value_in_seas=sum(value[in_out_season %in% "in"])) %>% group_by(agegroup) %>%
filter(epi_year>min(epi_year)),final_pop,by="agegroup") %>% mutate(attack_rate_perc=100*value/final)
View(df_cases_infs %>% mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)>=9 & week(date)<=41,"in","out")))
sum_inf_epiyear_age=left_join(
df_cases_infs %>% mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)<=9 | week(date)>=41,"in","out")) %>% group_by(epi_year,agegroup_name,agegroup) %>%
summarise(value=sum(value),value_in_seas=sum(value[in_out_season %in% "in"])) %>% group_by(agegroup) %>% filter(epi_year>min(epi_year)),
final_pop,by="agegroup") %>% mutate(attack_rate_perc=100*value/final)
View(df_cases_infs %>% mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)<=9 | week(date)>=41,"in","out")))
class((df_cases_infs %>% mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)<=9 | week(date)>=41,"in","out")))$in_out_season)
sum_inf_epiyear_age=left_join(df_cases_infs %>%
mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)<=9 | week(date)>=41,"in","out")) %>% group_by(epi_year,agegroup_name,agegroup) %>%
summarise(value=sum(value),value_in_seas=sum(value[in_out_season %in% "in"],na.rm=T)) %>% group_by(agegroup) %>% filter(epi_year>min(epi_year)),
final_pop,by="agegroup") %>% mutate(attack_rate_perc=100*value/final)
sum_inf_epiyear_age=left_join(df_cases_infs %>%
mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)<=9 | week(date)>=41,"in","out")) %>% group_by(epi_year,agegroup_name,agegroup) %>%
summarise(value=sum(value),value_in_seas=sum(value[in_out_season=="in"],na.rm=T)) %>% group_by(agegroup) %>% filter(epi_year>min(epi_year)),
final_pop,by="agegroup") %>% mutate(attack_rate_perc=100*value/final)
View(sum_inf_epiyear_age)
sum_inf_epiyear_age=left_join(df_cases_infs %>%
mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)<=9 | week(date)>=41,"in","out")) %>% group_by(epi_year,agegroup_name,agegroup) %>%
summarise(inf_tot=sum(value),value_in_seas=sum(value[in_out_season=="in"],na.rm=T)) %>% group_by(agegroup) %>% filter(epi_year>min(epi_year)),
final_pop,by="agegroup") %>% mutate(attack_rate_perc=100*inf_tot/final)
sum_inf_epiyear_age=left_join(df_cases_infs %>%
mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)<=9 | week(date)>=41,"in","out")) %>% group_by(epi_year,agegroup_name,agegroup) %>%
summarise(inf_tot=sum(value),inf_in_seas=sum(value[in_out_season=="in"],na.rm=T)) %>% group_by(agegroup) %>% filter(epi_year>min(epi_year)),
final_pop,by="agegroup") %>% mutate(attack_rate_perc=100*inf_tot/final,seas_share=inf_tot/inf_in_seas)
sum_inf_epiyear_age=left_join(df_cases_infs %>%
mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)<=9 | week(date)>=41,"in","out")) %>% group_by(epi_year,agegroup_name,agegroup) %>%
summarise(inf_tot=sum(value),inf_in_seas=sum(value[in_out_season=="in"],na.rm=T)) %>% group_by(agegroup) %>% filter(epi_year>min(epi_year)),
final_pop,by="agegroup") %>% mutate(attack_rate_perc=100*inf_tot/final,seas_share=inf_in_seas/inf_tot)
df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  ) %>%
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=6),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F)+
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0))+scale_y_continuous(expand=expansion(0.01,0))+theme_bw()+standard_theme
df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=6 & date<as.Date("2021-09-01")  ) %>%
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=9),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F)+
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0))+scale_y_continuous(expand=expansion(0.01,0))+theme_bw()+standard_theme
sel_age_lim=9
df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=sel_age_lim & date<as.Date("2021-09-01")  ) %>%
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=sel_age_lim),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F)+
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0))+scale_y_continuous(expand=expansion(0.01,0))+theme_bw()+standard_theme
R0_calc_SIRS(C_m,delta_susc_prop,rho,n_inf)
forcing_strength=0.5; npi_dates=as.Date(c("2020-03-26","2021-04-01")); years_pre_post_npi=c(7,2)
g(n_years,timesteps,simul_start_end,forcing_vector_npi) %=% fun_shutdown_seasforc(npi_dates,years_pre_post_npi,
season_width_wks=2,init_mt_day="06-01",peak_week=44,forcing_above_baseline=0.25,npireduc_strength=0.5)
initvals_sirs_model=fcn_set_initconds(rsv_age_groups,init_set=c("previous","fromscratch")[1],init_cond_src=c("output","file")[1],
ode_solution,init_seed=10,seed_vars="all",filename="simul_output/df_ode_solution_UK_multiple_adult_grps.RDS")
params=list(list(birth_rates,death_rates),K_m,contmatr_rowvector,inf_vars_inds,susc_vars_inds,delta_susc)
# interpolation fcns for seas forcing & extern introds
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
# how many introductions every 30 days?
approx_introd <- approxfun(data.frame(t=timesteps,as.numeric(timesteps %% 30==0)*5))
tm<-proc.time(); ode_sol<-lsoda(initvals_sirs_model,timesteps,func=sirs_seasonal_forc,parms=params); round(proc.time()-tm,2)
# reshape data | # check size of objs: fcn_objs_mem_use(1)
g(final_pop,ode_solution,df_cases_infs) %=% fun_process_simul_output(ode_sol,varname_list,incidvar="newinf",incid_only=TRUE,
init_date=simul_start_end[1],n_age,n_inf,rsv_age_groups,neg_thresh=-0.01)
df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=sel_age_lim & date<as.Date("2021-09-01")  ) %>%
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=sel_age_lim),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F)+
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0))+scale_y_continuous(expand=expansion(0.01,0))+theme_bw()+standard_theme
agedep_fact=1; delta_primary=c(0.09,0.07,0.05)/4
# c(0.27,0.03,0.01)/5 # c(0.21,0.11,0.01)/5 # c(0.09,0.07,0.05)/1.6 # rep(0.15,3) # rep(0.09,3)
delta_susc=sapply(1:n_age, function(x) {delta_primary/((agedep_fact^(x-1))*rsv_age_groups$value[x])})
delta_susc_prop=delta_susc*matrix(rep(rsv_age_groups$value,3),nrow=3,byrow=T)
### PLOT susceptibility:
# fcn_plot_suscept_table(fcn_suscept_agedeptable(rsv_age_groups,delta_susc,n_inf))
# ggsave(paste0("simul_output/suscept_age_dep/",agedep_fact,"delta_prim",unique(delta_primary),".png"),width=32,height=22,units="cm")
# calculate R0 (at max seasonal forcing=1)
R0_calc_SIRS(C_m,delta_susc_prop,rho,n_inf)
####
# DURATION of SIMULATION
# seasonal forcing (baseline level=1, forcing_strength=2 means 200% above baseline) | npi_reduc_strength: reduction from baseline
# set seas lims from UK data: peak is weeks 49/50, on/off is 41,11
forcing_strength=1; npi_dates=as.Date(c("2020-03-26","2021-04-01")); years_pre_post_npi=c(7,2)
g(n_years,timesteps,simul_start_end,forcing_vector_npi) %=% fun_shutdown_seasforc(npi_dates,years_pre_post_npi,
season_width_wks=2,init_mt_day="06-01",peak_week=44,forcing_above_baseline=0.25,npireduc_strength=0.5)
# plot seasonal forcing
fcn_plot_seas_forc(simul_start_end,forcing_vector_npi,seas_lims_wks=c(7,42),npi_dates,"3 month")
g(n_years,timesteps,simul_start_end,forcing_vector_npi) %=% fun_shutdown_seasforc(npi_dates,years_pre_post_npi,
season_width_wks=2,init_mt_day="06-01",peak_week=44,forcing_above_baseline=0.5,npireduc_strength=0.5)
# plot seasonal forcing
fcn_plot_seas_forc(simul_start_end,forcing_vector_npi,seas_lims_wks=c(7,42),npi_dates,"3 month")
forcing_above_baseline
forcing_above_baseline
simul_timeline_dates
source("fcns/RSV_model_functions.R")
npi_dates=as.Date(c("2020-03-26","2021-04-01")); years_pre_post_npi=c(7,2)
g(n_years,timesteps,simul_start_end,forcing_vector_npi) %=% fun_shutdown_seasforc(npi_dates,years_pre_post_npi,
season_width_wks=2,init_mt_day="06-01",peak_week=44,forcing_above_baseline=0.5,npireduc_strength=0.5)
# plot seasonal forcing
fcn_plot_seas_forc(simul_start_end,forcing_vector_npi,seas_lims_wks=c(7,42),npi_dates,"3 month")
params=list(list(birth_rates,death_rates),K_m,contmatr_rowvector,inf_vars_inds,susc_vars_inds,delta_susc)
# interpolation fcns for seas forcing & extern introds
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
# how many introductions every 30 days?
approx_introd <- approxfun(data.frame(t=timesteps,as.numeric(timesteps %% 30==0)*5))
tm<-proc.time(); ode_sol<-lsoda(initvals_sirs_model,timesteps,func=sirs_seasonal_forc,parms=params); round(proc.time()-tm,2)
# reshape data | # check size of objs: fcn_objs_mem_use(1)
g(final_pop,ode_solution,df_cases_infs) %=% fun_process_simul_output(ode_sol,varname_list,incidvar="newinf",incid_only=TRUE,
init_date=simul_start_end[1],n_age,n_inf,rsv_age_groups,neg_thresh=-0.01)
df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=sel_age_lim & date<as.Date("2021-09-01")  ) %>%
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=sel_age_lim),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),size=1/4,show.legend=F)+
scale_x_date(date_breaks="3 months",expand=expansion(0.01,0))+scale_y_continuous(expand=expansion(0.01,0))+theme_bw()+standard_theme
R0_calc_SIRS(C_m,delta_susc_prop,rho,n_inf)
agedep_fact=1; delta_primary=c(0.09,0.07,0.05)/3
# c(0.27,0.03,0.01)/5 # c(0.21,0.11,0.01)/5 # c(0.09,0.07,0.05)/1.6 # rep(0.15,3) # rep(0.09,3)
delta_susc=sapply(1:n_age, function(x) {delta_primary/((agedep_fact^(x-1))*rsv_age_groups$value[x])})
delta_susc_prop=delta_susc*matrix(rep(rsv_age_groups$value,3),nrow=3,byrow=T)
### PLOT susceptibility:
# fcn_plot_suscept_table(fcn_suscept_agedeptable(rsv_age_groups,delta_susc,n_inf))
# ggsave(paste0("simul_output/suscept_age_dep/",agedep_fact,"delta_prim",unique(delta_primary),".png"),width=32,height=22,units="cm")
# calculate R0 (at max seasonal forcing=1)
R0_calc_SIRS(C_m,delta_susc_prop,rho,n_inf)
R0_calc_SIRS(C_m,delta_susc_prop,rho,n_inf)
params=list(list(birth_rates,death_rates),K_m,contmatr_rowvector,inf_vars_inds,susc_vars_inds,delta_susc)
# interpolation fcns for seas forcing & extern introds
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
# how many introductions every 30 days?
approx_introd <- approxfun(data.frame(t=timesteps,as.numeric(timesteps %% 30==0)*5))
tm<-proc.time(); ode_sol<-lsoda(initvals_sirs_model,timesteps,func=sirs_seasonal_forc,parms=params); round(proc.time()-tm,2)
# reshape data | # check size of objs: fcn_objs_mem_use(1)
g(final_pop,ode_solution,df_cases_infs) %=% fun_process_simul_output(ode_sol,varname_list,incidvar="newinf",incid_only=TRUE,
init_date=simul_start_end[1],n_age,n_inf,rsv_age_groups,neg_thresh=-0.01)
df_cases_infs %>% filter(date>as.Date("2016-07-01") & agegroup<=sel_age_lim & date<as.Date("2021-09-01")  ) %>%
ggplot() + geom_area(aes(x=date,y=get(varname)*ifelse(grepl("fract",varname),1e2,1),fill=infection),position=position_stack(reverse=T),
alpha=0.2,color="black",size=0.25) + facet_wrap(~agegroup_name,scales="free") + ylab("% age group") +
geom_vline(data=sel_weeks%>%filter(agegroup<=sel_age_lim),aes(xintercept=date,linetype=ifelse(week==49,"solid","dashed")),
size=1/4,show.legend=F) + scale_x_date(date_breaks="3 months",expand=expansion(0.01,0))+
scale_y_continuous(expand=expansion(0.01,0))+theme_bw()+standard_theme
sum_inf_epiyear_age=left_join(df_cases_infs %>%
mutate(year=year(date),epi_year=ifelse(date>ymd(paste(year(date),"-07-01")),year(date),year(date)-1),
in_out_season=ifelse(week(date)<=9 | week(date)>=41,"in","out")) %>% group_by(epi_year,agegroup_name,agegroup) %>%
summarise(inf_tot=sum(value),inf_in_seas=sum(value[in_out_season=="in"],na.rm=T)) %>% group_by(agegroup) %>% filter(epi_year>min(epi_year)),
final_pop,by="agegroup") %>% mutate(attack_rate_perc=100*inf_tot/final,seas_share=inf_in_seas/inf_tot)
# plot
ggplot(sum_inf_epiyear_age) + geom_hpline(aes(x=factor(epi_year),y=attack_rate_perc),width=0.9,size=1) + ylab("attack rate % age group") +
facet_wrap(~agegroup_name,scales="free") + theme_bw() + standard_theme +
geom_hline(data=estim_attack_rates %>% pivot_longer(!agegroup_name) %>% filter(name!="median_est"),
aes(yintercept=value),size=1/3,color="red")
