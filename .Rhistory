guides(colour = guide_legend(override.aes = list(size=3)))
simul_hosp_rate %>% filter(date<as.Date("2020-04-01")) %>% group_by(date) %>%
summarise(simul_hosp_sum_full=sum(hosp)) %>% mutate(date_flag=ifelse(date<as.Date("2016-06-01"),"-2016/06","2016/06-")) %>%
ggplot(aes(x=date,y=simul_hosp_sum_full*datamart_report_rate[which.min(l_neg_llh)])) +
geom_point(size=1,aes(color="simulations")) + geom_line(group=1,color="black") +
# data
geom_point(data=datamart_0_5y_2012_2022 %>% filter(date<as.Date("2020-04-01")) %>%
mutate(date_flag=ifelse(date<as.Date("2016-06-01"),"-2016/06","2016/06-")),
aes(x=date,y=num_positives_0_5y),color="red",shape=21,size=1) +
geom_line(data=datamart_0_5y_2012_2022 %>% filter(date<as.Date("2020-04-01")) %>%
mutate(date_flag=ifelse(date<as.Date("2016-06-01"),"-2016/06","2016/06-")),aes(x=date,y=num_positives_0_5y),color="red")+
scale_x_date(date_breaks="3 month",expand=expansion(0.01,0)) + facet_wrap(~date_flag,nrow=2,scales="free_x") +
scale_color_manual(values=c("data"="red","simulations"="black")) + labs(color="") +
geom_text(label=paste0("Neg. LogLH=",round(unlist(l_neg_llh[which.min(l_neg_llh)]))),
x=as.Date("2012-10-01"),y=330,check_overlap=TRUE) +
xlab("") + ylab("DataMart vs simulated hospitalisations (x scaling for under-report) <5y") +
theme_bw() + standard_theme + theme(legend.text=element_text(size=20),legend.position="top") +
guides(colour = guide_legend(override.aes = list(size=3)))
simul_hosp_rate %>% filter(date<as.Date("2020-04-01")) %>% group_by(date) %>%
summarise(simul_hosp_sum_full=sum(hosp)) %>% mutate(date_flag=ifelse(date<as.Date("2016-06-01"),"-2016/06","2016/06-")) %>%
ggplot(aes(x=date,y=simul_hosp_sum_full*datamart_report_rate[which.min(l_neg_llh)])) +
geom_point(size=1,aes(color="simulations")) + geom_line(group=1,color="black") +
# data
geom_point(data=datamart_0_5y_2012_2022 %>% filter(date<as.Date("2020-04-01")) %>%
mutate(date_flag=ifelse(date<as.Date("2016-06-01"),"-2016/06","2016/06-")),
aes(x=date,y=num_positives_0_5y),color="red",shape=21,size=1) +
geom_line(data=datamart_0_5y_2012_2022 %>% filter(date<as.Date("2020-04-01")) %>%
mutate(date_flag=ifelse(date<as.Date("2016-06-01"),"-2016/06","2016/06-")),aes(x=date,y=num_positives_0_5y),color="red")+
scale_x_date(date_breaks="3 month",expand=expansion(0.01,0)) + facet_wrap(~date_flag,nrow=2,scales="free_x") +
scale_color_manual(values=c("data"="red","simulations"="black")) + labs(color="") +
geom_text(label=paste0("Neg. LogLH=",round(unlist(l_neg_llh[which.min(l_neg_llh)]))),
x=as.Date("2012-11-01"),y=360,check_overlap=TRUE) +
xlab("") + ylab("DataMart vs simulated hospitalisations (x scaling for under-report) <5y") +
theme_bw() + standard_theme + theme(legend.text=element_text(size=20),legend.position="top") +
guides(colour = guide_legend(override.aes = list(size=3)))
ggsave("extras/datamart_simul_hosp_under5yr_fit.png",dpi=300,width=30,height=20,device="png",units="cm")
simul_hosp_rate %>% filter(date<as.Date("2020-04-01")) %>% group_by(date) %>%
summarise(simul_hosp_sum_full=sum(hosp)) %>% mutate(date_flag=ifelse(date<as.Date("2016-06-01"),"-2016/06","2016/06-")) %>%
ggplot(aes(x=date,y=simul_hosp_sum_full*datamart_report_rate[which.min(l_neg_llh)])) +
geom_point(size=1,aes(color="simulations")) + geom_line(group=1,color="black") +
# data
geom_point(data=datamart_0_5y_2012_2022 %>% filter(date<as.Date("2020-04-01")) %>%
mutate(date_flag=ifelse(date<as.Date("2016-06-01"),"-2016/06","2016/06-")),
aes(x=date,y=num_positives_0_5y),color="red",shape=21,size=1) +
geom_line(data=datamart_0_5y_2012_2022 %>% filter(date<as.Date("2020-04-01")) %>%
mutate(date_flag=ifelse(date<as.Date("2016-06-01"),"-2016/06","2016/06-")),aes(x=date,y=num_positives_0_5y),color="red")+
scale_x_date(date_breaks="3 month",expand=expansion(0.01,0)) + facet_wrap(~date_flag,nrow=2,scales="free_x") +
scale_color_manual(values=c("data"="red","simulations"="black")) + labs(color="") +
geom_text(label=paste0("Neg. LogLH=",round(unlist(l_neg_llh[which.min(l_neg_llh)]))),
x=as.Date("2012-11-15"),y=360,check_overlap=TRUE) +
xlab("") + ylab("DataMart vs simulated hospitalisations (x scaling for under-report) <5y") +
theme_bw() + standard_theme + theme(legend.text=element_text(size=20),legend.position="top") +
guides(colour=guide_legend(override.aes=list(size=3)))
# ggsave("extras/datamart_simul_hosp_under5yr_fit.png",dpi=300,width=30,height=20,device="png",units="cm")
ggsave("extras/datamart_simul_hosp_under5yr_fit.png",dpi=300,width=30,height=20,device="png",units="cm")
dbinom(x=kenya_attack_rates$RSV_sympt_posit,size=kenya_attack_rates$n_test,
prob=c(mean(attack_rates$attack_rate_stat_pol[1:2]),
sum(attack_rates$stationary_popul[3:7]*attack_rates$attack_rate_stat_pol[3:7]/sum(attack_rates$stationary_popul[3:7])),
attack_rates$attack_rate_stat_pol[8], attack_rates$attack_rate_stat_pol[9],
mean(attack_rates$attack_rate_stat_pol[10:11])))
attack_rate_binom_lklhd=dbinom(x=kenya_attack_rates$RSV_sympt_posit,size=kenya_attack_rates$n_test,
prob=c(mean(attack_rates$attack_rate_stat_pol[1:2]),
sum(attack_rates$stationary_popul[3:7]*attack_rates$attack_rate_stat_pol[3:7]/sum(attack_rates$stationary_popul[3:7])),
attack_rates$attack_rate_stat_pol[8], attack_rates$attack_rate_stat_pol[9],
mean(attack_rates$attack_rate_stat_pol[10:11])))
attack_rate_binom_lklhd
sum(attack_rate_binom_lklhd)
dbinom(x=kenya_attack_rates$RSV_sympt_posit,size=kenya_attack_rates$n_test,
prob=c(mean(attack_rates$attack_rate_stat_pol[1:2]),
sum(attack_rates$stationary_popul[3:7]*attack_rates$attack_rate_stat_pol[3:7]/sum(attack_rates$stationary_popul[3:7])),
attack_rates$attack_rate_stat_pol[8], attack_rates$attack_rate_stat_pol[9],
mean(attack_rates$attack_rate_stat_pol[10:11])),log = T)
-sum(dbinom(x=kenya_attack_rates$RSV_sympt_posit,size=kenya_attack_rates$n_test,
prob=c(mean(attack_rates$attack_rate_stat_pol[1:2]),
sum(attack_rates$stationary_popul[3:7]*attack_rates$attack_rate_stat_pol[3:7]/sum(attack_rates$stationary_popul[3:7])),
attack_rates$attack_rate_stat_pol[8], attack_rates$attack_rate_stat_pol[9],
mean(attack_rates$attack_rate_stat_pol[10:11])),log = T))
attack_rates <- left_join(df_cases_infs %>% filter(date>as.Date("2017-10-01") & date<as.Date("2018-04-01")) %>%
group_by(t,date,agegroup) %>% summarise(value=sum(value)) %>% group_by(agegroup) %>% summarise(cumul_inf=sum(value)),
rsv_age_groups %>% select(agegroup_name,stationary_popul,value) %>% rename(real_pop=value) %>%
mutate(agegroup=as.numeric(factor(agegroup_name,levels=unique(agegroup_name)))),by="agegroup" ) %>%
mutate(attack_rate_stat_pol=cumul_inf/stationary_popul,attack_rate_real_pol=cumul_inf/real_pop) # %>%
attack_rates
-sum(dbinom(x=kenya_attack_rates$RSV_sympt_posit,size=kenya_attack_rates$n_test,
prob=c(mean(attack_rates$attack_rate_stat_pol[1:2]),
sum(attack_rates$stationary_popul[3:7]*attack_rates$attack_rate_stat_pol[3:7]/sum(attack_rates$stationary_popul[3:7])),
attack_rates$attack_rate_stat_pol[8], attack_rates$attack_rate_stat_pol[9],
mean(attack_rates$attack_rate_stat_pol[10:11])),log = T))
rgamma(10,shape = 5,rate = 1)
mean(rgamma(1e4,shape = 5,rate = 1))
median(rgamma(1e4,shape = 5,rate = 1))
std(rgamma(1e4,shape = 5,rate = 1))
min(rgamma(1e4,shape = 5,rate = 1))
table(rgamma(1e4,shape = 5,rate = 1))
summary(rgamma(1e4,shape = 5,rate = 1))
summary(rgamma(1e4,shape=10,rate=2))
summary(rgamma(1e4,shape=15,rate=3))
qgamma(A_opt[,3],shape=10,rate=2))
qgamma(A_opt[,3],shape=10,rate=2)
A_opt <- randomLHS(n=200,k=6) # optimumLHS(n=100,k=5,maxSweeps=4,eps=0.01) # randomLHS()
# exp_dep=seq(1/4,2,1/8), age_dep=seq(1/8,1,1/16)
# convert to relevant ranges, columns:
# 1) expdep 2) agedep 3) peak_width 4) peak_height 5) waning 6)
A_opt[,1] <- qunif(A_opt[,1],min=1/4,max=2); A_opt[,2]<-qunif(A_opt[,2],min=0.05,max=1)
A_opt[,3] <- qgamma(A_opt[,3],shape=10,rate=2) # qnorm(A_opt[,3],mean=5,sd=3);
A_opt[,4] <- qunif(A_opt[,4],min=1/4,max=1.5)
A_opt[,5] <- qnorm(A_opt[,5],mean=365,sd=100); A_opt[,5] <- 1/A_opt[,5]; A_opt[,6] <- round(qunif(A_opt[,6],min=42,max=48))
A_opt=abs(A_opt)
hist(A_opt[,5])
hist(1/A_opt[,5])
rho=7
rho=1/7
omega
A_opt[k_par,5]
A_opt <- randomLHS(n=200,k=6) # optimumLHS(n=100,k=5,maxSweeps=4,eps=0.01) # randomLHS()
# exp_dep=seq(1/4,2,1/8), age_dep=seq(1/8,1,1/16)
# convert to relevant ranges, columns:
# 1) expdep 2) agedep 3) peak_width 4) peak_height 5) waning 6)
A_opt[,1] <- qunif(A_opt[,1],min=1/4,max=2); A_opt[,2]<-qunif(A_opt[,2],min=0.05,max=1)
A_opt[,3] <- qgamma(A_opt[,3],shape=10,rate=2) # qnorm(A_opt[,3],mean=5,sd=3);
A_opt[,4] <- qunif(A_opt[,4],min=1/4,max=1.5)
A_opt[,5] <- qnorm(A_opt[,5],mean=365,sd=50); A_opt[,5] <- 1/A_opt[,5]; A_opt[,6] <- round(qunif(A_opt[,6],min=42,max=48))
A_opt=abs(A_opt)
# age-dependence, exposure-dependence
list_AR=list_hosp_with_data=list()
for (k_par in 1:nrow(A_opt)) {
exp_dep <- A_opt[k_par,1]; age_dep <- A_opt[k_par,2]
const_delta <- 1/2; delta_primary <- const_delta*exp(-exp_dep*(1:3)) # partable$const_delta[k_par]
# matrix of susceptibility parameters
delta_susc <- round(sapply(1:n_age, function(x) { delta_primary/(exp(age_dep*x)) }),5)
# R0_calc_SIRS(C_m,delta_susc,rho,n_inf)
# forcing: PEAK HEIGHT + WIDTH
# peak_week_val=round(runif(1,min=44,max=48))
g(n_years,timesteps,simul_start_end,forcing_vector_npi) %=% fun_shutdown_seasforc(npi_dates,
years_pre_post_npi=c(10,0),season_width_wks=A_opt[k_par,3],init_mt_day="01-01",
peak_week=A_opt[k_par,6],forcing_above_baseline=A_opt[k_par,4],npireduc_strength=0)
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
# WANING
omega=A_opt[k_par,5] # 1/rho=rweibull(1, shape=4.1,scale=8.3) # rho=1/7
# KINETIC MATRIX (aging terms need to be scaled by duration of age groups!)
K_m=fun_K_m_sirs_multiage(dim_sys,n_age,n_inf,n_compartment,rho,omega,varname_list,
agegroup_durations=rsv_age_groups$duration)
# R0 correction
r0_min=2
if (R0_calc_SIRS(C_m,delta_susc,rho,n_inf)<r0_min) { delta_susc = delta_susc*(r0_min/R0_calc_SIRS(C_m,delta_susc,rho,n_inf)) }
# all input parameters
params <- list(list(birth_rates,deaths_vector,rsv_age_groups$stationary_popul),K_m,
contmatr_rowvector,inf_vars_inds,
susc_vars_inds,delta_susc,mat_imm_inds)
# SOLVE ODE SYSTEM
tm <- proc.time(); ode_sol <- lsoda(initvals_sirs_model,timesteps,
func=sirs_seasonal_forc_mat_immun,parms=params); round(proc.time()-tm,2)
message(paste0("#",k_par,", R0=",round(R0_calc_SIRS(C_m,delta_susc,rho,n_inf),2)))
# Extract infection *incidence*
df_cases_infs <- fcn_process_odesol_incid(ode_sol,n_age,n_inf,n_compartment,simul_start_end) %>%
mutate(value=round(value,2))
# 1) expdep 2) agedep 3) peak_width 4) peak_height 5) waning
# attack rate
attack_rates <- left_join(df_cases_infs %>% filter(date>as.Date("2017-10-01") & date<as.Date("2018-04-01")) %>%
group_by(t,date,agegroup) %>% summarise(value=sum(value)) %>%
group_by(agegroup) %>% summarise(cumul_inf=sum(value)),
rsv_age_groups %>% select(agegroup_name,stationary_popul,value) %>%
rename(real_pop=value) %>%
mutate(agegroup=as.numeric(factor(agegroup_name,levels=unique(agegroup_name)))),
by="agegroup") %>%
mutate(attack_rate_stat_pol=cumul_inf/stationary_popul,
attack_rate_real_pol=cumul_inf/real_pop,k_par=k_par,
R0=R0_calc_SIRS(C_m,delta_susc,rho,n_inf),
peakweek=peak_week_val,expdep=A_opt[k_par,1],agedep=A_opt[k_par,2],
peakwidth=A_opt[k_par,3],peakheight=A_opt[k_par,4],waning=A_opt[k_par,5])
# HOSPITALISATIONS
list_hosp_with_data[[k_par]]= left_join(df_cases_infs %>% filter(agegroup<=7 & date>as.Date("2018-09-15")) %>%
mutate(agegroup_name=factor(rsv_age_groups$agegroup_name[agegroup],unique(rsv_age_groups$agegroup_name))) %>%
group_by(t,date,agegroup_name) %>% summarise(value=sum(value)),
# data on hospitalis probs
hosp_probabilities %>% select(agegroup_name,prob_hosp_per_infection_adj,prob_hosp_per_infection),by=c("agegroup_name")) %>%
mutate(hosp=value*prob_hosp_per_infection) %>% select(!c(prob_hosp_per_infection_adj,prob_hosp_per_infection)) %>%
group_by(date) %>% summarise(value=sum(value),hosp=sum(hosp)) %>%
mutate(k_par=k_par,R0=R0_calc_SIRS(C_m,delta_susc,rho,n_inf))
# collect outputs
list_AR[[k_par]]=attack_rates
if (k_par==nrow(A_opt)) {
# aggregate results
all_hosp=bind_rows(list_hosp_with_data) %>%
mutate(year_week=paste0(isoyear(date),"-",ifelse(nchar(isoweek(date))>1,isoweek(date),paste0("0",isoweek(date))) ),
year_week=factor(year_week,levels=unique(year_week))) %>% group_by(year_week,k_par) %>%
summarise(simul_cases=sum(value),simul_hosp_sum_full=sum(hosp),date=min(date),
simul_hosp_rate_100k=1e5*simul_hosp_sum_full/sum(rsv_age_groups$stationary_popul[1:7]))
all_hosp <- left_join(SARIwatch_RSVhosp_under5_2018_2020_weekly_counts, all_hosp,by="date") %>%
mutate(simul_hosp_scaled=simul_hosp_sum_full*under_report_factor*(pop_AGEUNDER5/sum(rsv_age_groups$stationary_popul[1:7])),
log_lklh_poiss=dpois(x=casesunder5total,lambda=simul_hosp_scaled,log=T)) %>% relocate(date,.after=wk_n) %>%
group_by(k_par) %>% mutate(sum_neg_llh=-sum(log_lklh_poiss,na.rm=T))
all_attack_rates=bind_rows(list_AR)
all_attack_rates <- left_join(all_attack_rates,all_hosp %>% select(c(k_par,sum_neg_llh)) %>%
summarise(sum_neg_llh=unique(sum_neg_llh)) ) %>% mutate(agegroup_name=factor(agegroup_name,levels=unique(agegroup_name)))
}
}
rho
omega
A_opt[,1] <- qunif(A_opt[,1],min=1/4,max=2); A_opt[,2]<-qunif(A_opt[,2],min=0.05,max=1)
A_opt[,3] <- qgamma(A_opt[,3],shape=10,rate=2) # qnorm(A_opt[,3],mean=5,sd=3);
A_opt[,4] <- qunif(A_opt[,4],min=1/4,max=1.5)
A_opt[,5] <- qnorm(A_opt[,5],mean=365,sd=50); A_opt[,5] <- 1/A_opt[,5]; A_opt[,6] <- round(qunif(A_opt[,6],min=42,max=48))
A_opt <- randomLHS(n=200,k=6) # optimumLHS(n=100,k=5,maxSweeps=4,eps=0.01) # randomLHS()
# exp_dep=seq(1/4,2,1/8), age_dep=seq(1/8,1,1/16)
# convert to relevant ranges, columns:
# 1) expdep 2) agedep 3) peak_width 4) peak_height 5) waning 6)
A_opt[,1] <- qunif(A_opt[,1],min=1/4,max=2); A_opt[,2]<-qunif(A_opt[,2],min=0.05,max=1)
A_opt[,3] <- qgamma(A_opt[,3],shape=10,rate=2) # qnorm(A_opt[,3],mean=5,sd=3);
A_opt[,4] <- qunif(A_opt[,4],min=1/4,max=1.5)
A_opt[,5] <- qnorm(A_opt[,5],mean=365,sd=50); A_opt[,5] <- 1/A_opt[,5]; A_opt[,6] <- round(qunif(A_opt[,6],min=42,max=48))
A_opt
list_AR=list_hosp_with_data=list()
exp_dep <- A_opt[k_par,1]; age_dep <- A_opt[k_par,2]
const_delta <- 1/2; delta_primary <- const_delta*exp(-exp_dep*(1:3)) # partable$const_delta[k_par]
delta_primary
delta_susc
R0_calc_SIRS(C_m,delta_susc,rho,n_inf)
A_opt[k_par,3]
g(n_years,timesteps,simul_start_end,forcing_vector_npi) %=% fun_shutdown_seasforc(npi_dates,
years_pre_post_npi=c(10,0),season_width_wks=A_opt[k_par,3],init_mt_day="01-01",
peak_week=A_opt[k_par,6],forcing_above_baseline=A_opt[k_par,4],npireduc_strength=0)
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
omega
1/omega
K_m=fun_K_m_sirs_multiage(dim_sys,n_age,n_inf,n_compartment,rho,omega,varname_list,
agegroup_durations=rsv_age_groups$duration)
K_m
View(omega)
View(K_m)
r0_min=2
if (R0_calc_SIRS(C_m,delta_susc,rho,n_inf)<r0_min) { delta_susc = delta_susc*(r0_min/R0_calc_SIRS(C_m,delta_susc,rho,n_inf)) }
params <- list(list(birth_rates,deaths_vector,rsv_age_groups$stationary_popul),K_m,
contmatr_rowvector,inf_vars_inds,
susc_vars_inds,delta_susc,mat_imm_inds)
tm <- proc.time(); ode_sol <- lsoda(initvals_sirs_model,timesteps,
func=sirs_seasonal_forc_mat_immun,parms=params); round(proc.time()-tm,2)
initvals_sirs_model
contmatr_rowvector
deaths_vector
birth_rates
rsv_age_groups$stationary_popul
approx_seas_forc
forcing_vector_npi
plot(contmatr_rowvector)
plot(forcing_vector_npi)
g(n_years,timesteps,simul_start_end,forcing_vector_npi) %=% fun_shutdown_seasforc(npi_dates,
years_pre_post_npi=c(10,0),season_width_wks=A_opt[k_par,3],init_mt_day="07-01",
peak_week=A_opt[k_par,6],forcing_above_baseline=A_opt[k_par,4],npireduc_strength=0)
approx_seas_forc <- approxfun(data.frame(t=timesteps,seas_force=forcing_vector_npi))
params <- list(list(birth_rates,deaths_vector,rsv_age_groups$stationary_popul),K_m,
contmatr_rowvector,inf_vars_inds,
susc_vars_inds,delta_susc,mat_imm_inds)
tm <- proc.time(); ode_sol <- lsoda(initvals_sirs_model,timesteps,
func=sirs_seasonal_forc_mat_immun,parms=params); round(proc.time()-tm,2)
message(paste0("#",k_par,", R0=",round(R0_calc_SIRS(C_m,delta_susc,rho,n_inf),2)))
initvals_sirs_model
inf_vars_inds
susc_vars_inds
delta_susc
log10(delta_susc)
r0_min/R0_calc_SIRS(C_m,delta_susc,rho,n_inf)
round(sapply(1:n_age, function(x) { delta_primary/(exp(age_dep*x)) }),6)
delta_susc <- round(sapply(1:n_age, function(x) { delta_primary/(exp(age_dep*x)) }),6)
R0_calc_SIRS(C_m,delta_susc,rho,n_inf)
if (R0_calc_SIRS(C_m,delta_susc,rho,n_inf)<r0_min) { delta_susc = delta_susc*(r0_min/R0_calc_SIRS(C_m,delta_susc,rho,n_inf)) }
delta_susc
R0_calc_SIRS(C_m,delta_susc,rho,n_inf)
params <- list(list(birth_rates,deaths_vector,rsv_age_groups$stationary_popul),K_m,
contmatr_rowvector,inf_vars_inds,
susc_vars_inds,delta_susc,mat_imm_inds)
tm <- proc.time(); ode_sol <- lsoda(initvals_sirs_model,timesteps,
func=sirs_seasonal_forc_mat_immun,parms=params); round(proc.time()-tm,2)
timesteps
tail(delta_susc)
tail(timesteps)
forcing_vector_npi
A_opt[,3]
sum(A_opt<0)
A_opt[,6]
A_opt[,2]
round(A_opt[,2],1)
uk_births_by_month <- read_csv("data/uk_births_2010_2020.csv")
uk_births_by_month
colnames(uk_births_by_month)
substr(colnames(uk_births_by_month),"\n","")
gsub(x=colnames(uk_births_by_month),pattern="\n",replacement = "")
colnames(uk_births_by_month)=gsub(x=colnames(uk_births_by_month),pattern="\n",replacement = "")
head(uk_births_by_month,2)
uk_births_by_month %>% pivot_longer(!c(Year,Total))
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name)
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>%
ggplot(aes(x=month,y=value,color=Year)) + geom_line() + theme_bw() + standard_theme
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>%
ggplot(aes(x=month,y=value,color=factor(Year),group=Year)) + geom_line() + theme_bw() + standard_theme
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
ggplot(aes(x=month,y=value,color=factor(Year),group=Year)) + geom_line() + theme_bw() + standard_theme
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% ggplot(aes(x=month,y=value,color=factor(Year),group=Year)) + geom_line() + theme_bw() + standard_theme
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>%
ggplot(aes(x=month,y=value,color=factor(Year),group=Year)) + geom_line() + geom_point() + theme_bw() + standard_theme
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>%
ggplot(aes(x=month,y=value,color=factor(Year),group=Year)) + geom_line() + geom_point() +
scale_color_gradient(low="blue",high="red") + theme_bw() + standard_theme
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>%
ggplot(aes(x=month,y=value,color=(Year),group=Year)) + geom_line() + geom_point() +
scale_color_gradient(low="blue",high="red") + theme_bw() + standard_theme
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% group_by(month) %>% summarise(value=mean(value))
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% group_by(month) %>% summarise(value=mean(value)) %>%
ggplot(aes(x=month,y=value,color=(Year),group=Year)) + geom_line() + geom_point() +
scale_color_gradient(low="blue",high="red") + theme_bw() + standard_theme
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% group_by(month) %>% summarise(value=mean(value)) %>%
ggplot(aes(x=month,y=value)) + geom_line() + geom_point() + # ,color=(Year),group=Year
scale_color_gradient(low="blue",high="red") + theme_bw() + standard_theme
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% group_by(month) %>% summarise(value=mean(value)) %>%
ggplot(aes(x=month,y=value,group=1)) + geom_line() + geom_point() + # ,color=(Year),group=Year
scale_color_gradient(low="blue",high="red") + theme_bw() + standard_theme
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% group_by(month) %>% mutate(value=mean(value))
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% group_by(month) %>% mutate(mean_value=mean(value))
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% # group_by(month) %>% mutate(mean_value=mean(value)) %>%
ggplot(aes(x=month,y=value,group=Year)) + geom_line() + geom_point() + # ,color=(Year),group=Year
scale_color_gradient(low="blue",high="red") + theme_bw() + standard_theme
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% # group_by(month) %>% mutate(mean_value=mean(value)) %>%
ggplot(aes(x=month,y=value,group=Year,color=Year)) + geom_line() + geom_point() + # ,color=(Year),group=Year
scale_color_gradient(low="blue",high="red") + theme_bw() + standard_theme
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% # group_by(month) %>% mutate(mean_value=mean(value)) %>%
ggplot(aes(x=month,y=value,group=Year,color=Year)) + geom_line() + geom_point() + # ,color=(Year),group=Year
#
theme_bw() + standard_theme # scale_color_gradient(low="blue",high="red") +
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>% filter(Year!=2020) %>% group_by(month) %>% mutate(mean_value=mean(value))
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>% filter(Year!=2020) %>% group_by(month) %>% summarise(mean_value=mean(value))
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% # group_by(month) %>% mutate(mean_value=mean(value)) %>%
ggplot(aes(x=month,y=value,group=Year,color=Year)) + geom_line() + # geom_point() + # ,color=(Year),group=Year
# mean
geom_line(data=uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>%
mutate(month=factor(month,levels=unique(month))) %>% filter(Year!=2020) %>%
group_by(month) %>% summarise(mean_value=mean(value)), aes(x=month,y=mean_value),color="black",size=1.3) +
theme_bw() + standard_theme # scale_color_gradient(low="blue",high="red") +
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020)
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>%
mutate(month=factor(month,levels=unique(month))) %>% filter(Year!=2020)
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>%
mutate(month=factor(month,levels=unique(month))) %>% filter(Year!=2020) %>%
group_by(month) %>% summarise(mean_value=mean(value))
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% # group_by(month) %>% mutate(mean_value=mean(value)) %>%
ggplot(aes(x=month,y=value,group=Year,color=Year)) + geom_line() + # geom_point() + # ,color=(Year),group=Year
# mean
# geom_line(data=uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>%
# mutate(month=factor(month,levels=unique(month))) %>% filter(Year!=2020) %>%
#   group_by(month) %>% summarise(mean_value=mean(value)), aes(x=month,y=mean_value),color="black",size=1.3) +
theme_bw() + standard_theme # scale_color_gradient(low="blue",high="red") +
birth_means=uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>%
mutate(month=factor(month,levels=unique(month))) %>% filter(Year!=2020) %>%
group_by(month) %>% summarise(mean_value=mean(value))
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% # group_by(month) %>% mutate(mean_value=mean(value)) %>%
ggplot(aes(x=month,y=value,group=Year,color=Year)) + geom_line() + # geom_point() + # ,color=(Year),group=Year
# mean
geom_line(data=birth_means, aes(x=month,y=mean_value),color="black",size=1.3) +
theme_bw() + standard_theme # scale_color_gradient(low="blue",high="red") +
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% # group_by(month) %>% mutate(mean_value=mean(value)) %>%
ggplot(aes(x=month,y=value,group=Year,color=Year)) + geom_line() + # geom_point() + # ,color=(Year),group=Year
# mean
geom_line(data=birth_means, aes(x=month,y=mean_value,group=1),color="black",size=1.3) +
theme_bw() + standard_theme # scale_color_gradient(low="blue",high="red") +
ggsave("extras/uk_births_average.png",dpi=300,width=30,height=20,device="png",units="cm")
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% # group_by(month) %>% mutate(mean_value=mean(value)) %>%
ggplot(aes(x=month,y=value,group=Year,color=factor(Year))) + geom_line() + # geom_point() + # ,color=(Year),group=Year
scale_color_discrete(low="blue",high="red") +
# mean
geom_line(data=birth_means, aes(x=month,y=mean_value,group=1),color="black",size=1.3) + geom_point(shape=21) +
theme_bw() + standard_theme + xlab("") + ylab("births/month")
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% # group_by(month) %>% mutate(mean_value=mean(value)) %>%
ggplot(aes(x=month,y=value,group=Year,color=factor(Year))) + geom_line() + # geom_point() + # ,color=(Year),group=Year
scale_color_viridis_b() + # low="blue",high="red"
# mean
geom_line(data=birth_means, aes(x=month,y=mean_value,group=1),color="black",size=1.3) + geom_point(shape=21) +
theme_bw() + standard_theme + xlab("") + ylab("births/month")
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% # group_by(month) %>% mutate(mean_value=mean(value)) %>%
ggplot(aes(x=month,y=value,group=Year,color=factor(Year))) + geom_line() + # geom_point() + # ,color=(Year),group=Year
scale_color_viridis_d() + # low="blue",high="red"
# mean
geom_line(data=birth_means, aes(x=month,y=mean_value,group=1),color="black",size=1.3) + geom_point(shape=21) +
theme_bw() + standard_theme + xlab("") + ylab("births/month")
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% # group_by(month) %>% mutate(mean_value=mean(value)) %>%
ggplot(aes(x=month,y=value,group=Year,color=factor(Year))) + geom_line() + # geom_point() + # ,color=(Year),group=Year
scale_color_viridis_d() + # low="blue",high="red"
# mean
geom_line(data=birth_means, aes(x=month,y=mean_value,group=1),color="black",size=1.3) + # geom_point(shape=21) +
theme_bw() + standard_theme + xlab("") + ylab("births/month")
uk_births_by_month %>% pivot_longer(!c(Year,Total)) %>% rename(month=name) %>% mutate(month=factor(month,levels=unique(month))) %>%
filter(Year!=2020) %>% # group_by(month) %>% mutate(mean_value=mean(value)) %>%
ggplot(aes(x=month,y=value,group=Year,color=factor(Year))) + geom_line() + # geom_point() + # ,color=(Year),group=Year
scale_color_viridis_d() + # low="blue",high="red"
# mean
geom_line(data=birth_means, aes(x=month,y=mean_value,group=1),color="black",size=1.3) + # geom_point(shape=21) +
theme_bw() + standard_theme + xlab("") + ylab("births/month") + ggtitle("UK births/month 2010-2019")
# save
ggsave("extras/uk_births_average.png",dpi=300,width=30,height=20,device="png",units="cm")
simul_hosp_rate %>% filter(date<as.Date("2020-04-01")) %>% group_by(date) %>%
summarise(simul_hosp_sum_full=sum(hosp)) %>% mutate(date_flag=ifelse(date<as.Date("2016-06-01"),"-2016/06","2016/06-")) %>%
ggplot(aes(x=date,y=simul_hosp_sum_full*datamart_report_rate[which.min(l_neg_llh)])) +
geom_point(size=1,aes(color="simulations")) + geom_line(group=1,color="black") +
# data
geom_point(data=datamart_0_5y_2012_2022 %>% filter(date<as.Date("2020-04-01")) %>%
mutate(date_flag=ifelse(date<as.Date("2016-06-01"),"-2016/06","2016/06-")),
aes(x=date,y=num_positives_0_5y),color="red",shape=21,size=1) +
geom_line(data=datamart_0_5y_2012_2022 %>% filter(date<as.Date("2020-04-01")) %>%
mutate(date_flag=ifelse(date<as.Date("2016-06-01"),"-2016/06","2016/06-")),aes(x=date,y=num_positives_0_5y),color="red")+
scale_x_date(date_breaks="3 month",expand=expansion(0.01,0)) + facet_wrap(~date_flag,nrow=2,scales="free_x") +
scale_color_manual(values=c("data"="red","simulations"="black")) + labs(color="") +
geom_text(label=paste0("Neg. LogLH=",round(unlist(l_neg_llh[which.min(l_neg_llh)]))),
x=as.Date("2012-11-15"),y=360,check_overlap=TRUE) +
xlab("") + ylab("DataMart vs simulated hospitalisations (x scaling for under-report) <5y") +
theme_bw() + standard_theme + theme(legend.text=element_text(size=20),legend.position="top") +
guides(colour=guide_legend(override.aes=list(size=3)))
Im(1)
Im(z)
complex(1)
1i
1+1i
(1:10)*1i
exp((1:10)*1i)
plot(exp((1:10)*1i))
plot(exp((1:10)*1i),type="b")
plot(Im(exp((1:10)*1i)),type="b")
plot(Im(exp((-10:10)*1i)),type="b")
plot(Im(exp(((-100:100)/10)*1i)),type="b")
plot(Re(exp(((-100:100)/10)*1i)),type="b")
plot((exp(((-100:100)/10)*1i)),type="b")
sapply((1:5)/5, function(x) (exp((x*(-100:100)/10)*1i)),type="b")
sapply((1:5)/5, function(x) exp((x*(-100:100)/10)*1i) )
data.frame(lapply((1:5)/5, function(x) exp((x*(-100:100)/10)*1i) ))
dim(data.frame(lapply((1:5)/5, function(x) exp((x*(-100:100)/10)*1i) )))
data.frame(lapply((1:5)/5, function(x) exp((x*(-100:100)/10)*1i) )) %>% mutate(n=row_number()) %>% pivot_longer(!n)
dim(data.frame(lapply((1:5)/5, function(x) exp((x*(-100:100)/10)*1i) )) %>% mutate(n=row_number()) %>% pivot_longer(!n))
colnames(data.frame(lapply((1:5)/5, function(x) exp((x*(-100:100)/10)*1i) )))
data.frame(lapply((1:5)/5, function(x) list(x=exp((x*(-100:100)/10)*1i)) )))
data.frame( lapply((1:5)/5, function(x) list(x=exp((x*(-100:100)/10)*1i)) ) )
head(data.frame( lapply((1:5)/5, function(x) list(x=exp((x*(-100:100)/10)*1i)) ) ),2)
head(data.frame( lapply((1:5)/5, function(x) list(x=exp((x*(-100:100)/10)*1i)) ) ) %>% mutate(n=row_number()) %>% pivot_longer(!n),3)
head(data.frame( lapply((1:5)/5, function(x) list(x=exp((x*(-100:100)/10)*1i)) ) ) %>% mutate(n=row_number()) %>% pivot_longer(!n) %>% mutate(real=Re(value),imag=Im(value)),4)
data.frame( lapply((1:5)/5, function(x) list(x=exp((x*(-100:100)/10)*1i)) ) ) %>% mutate(n=row_number()) %>% pivot_longer(!n) %>% mutate(real=Re(value),imag=Im(value)) %>% ggplot(aes(x=real,y=imag,color=name)) + geom_path() + theme_bw()
data.frame( lapply((1:5), function(x) list(x=exp((x*(-100:100)/10)*1i)) ) ) %>% mutate(n=row_number()) %>% pivot_longer(!n) %>% mutate(real=Re(value),imag=Im(value)) %>% ggplot(aes(x=real,y=imag,color=name)) + geom_path() + theme_bw()
data.frame( lapply((1:5)*10, function(x) list(x=exp((x*(-100:100)/10)*1i)) ) ) %>% mutate(n=row_number()) %>% pivot_longer(!n) %>% mutate(real=Re(value),imag=Im(value)) %>% ggplot(aes(x=real,y=imag,color=name)) + geom_point() + theme_bw()
data.frame( lapply((1:5), function(x) list(x=exp((x*(-100:100)/10)*1i)) ) ) %>% mutate(n=row_number()) %>% pivot_longer(!n) %>% mutate(real=Re(value),imag=Im(value)) %>% ggplot(aes(x=real,y=imag,color=name)) + geom_point() + theme_bw()
data.frame( lapply((1:5), function(x) list(x=exp((x*(-100:100)/10)*1i)) ) ) %>% mutate(n=row_number()) %>% pivot_longer(!n) %>% mutate(real=Re(value),imag=Im(value)) %>% ggplot(aes(x=real,y=imag,color=name)) + geom_point(shape=21) + theme_bw()
data.frame( lapply((1:5), function(x) list(x=exp((x*(-100:100)/10)*1i)) ) ) %>% mutate(n=row_number()) %>% pivot_longer(!n) %>% mutate(real=Re(value),imag=Im(value)) %>% ggplot(aes(x=n,y=imag,color=name)) + geom_point(shape=21) + theme_bw()
data.frame( lapply((1:5), function(x) list(x=exp((x*(-100:100)/10)*1i)) ) ) %>% mutate(n=row_number()) %>% pivot_longer(!n) %>% mutate(real=Re(value),imag=Im(value)) %>% ggplot(aes(x=n,y=imag,color=name)) + geom_line() + theme_bw()
data.frame( lapply((1:5), function(x) list(x=exp((x*(-30:30)/10)*1i)) ) ) %>% mutate(n=row_number()) %>% pivot_longer(!n) %>% mutate(real=Re(value),imag=Im(value)) %>% ggplot(aes(x=n,y=imag,color=name)) + geom_line() + theme_bw()
week("2020-07-01")
rm(list=ls())
if (!any(row.names(installed.packages()) %in% "here")) {install.packages("here")}; library(here)
here::i_am()
# currentdir_path=dirname(rstudioapi::getSourceEditorContext()$path); setwd(currentdir_path)
# load libraries
x1 <- c("tidyverse","deSolve","lubridate","gtools","ISOweek")
# "rstudioapi","devtools","wpp2019","Rcpp","tsibble","pracma","qs","ungeviz","zoo","RcppRoll"
# if (!any(grepl("ungeviz",row.names(installed.packages())))) { devtools::install_github("wilkelab/ungeviz") }
x2 <- x1 %in% row.names(installed.packages()); if (any(x2 == FALSE)) { install.packages(x1[! x2]) }
library(here)
here::i_am()
i_am()
row.names(installed.packages())
x1 <- c("tidyverse","deSolve","lubridate","gtools","ISOweek")
# "rstudioapi","devtools","wpp2019","Rcpp","tsibble","pracma","qs","ungeviz","zoo","RcppRoll"
# if (!any(grepl("ungeviz",row.names(installed.packages())))) { devtools::install_github("wilkelab/ungeviz") }
x2 <- x1 %in% row.names(installed.packages())
x1
lapply(x1,library,character.only=TRUE) # as.Date <- zoo::as.Date
library(tidyverse)
library(dplyr)
x2
x2 <- x1 %in% row.names(installed.packages()); if (any(x2 == FALSE)) { install.packages(x1[! x2]) }
lapply(x1,library,character.only=TRUE) # as.Date <- zoo::as.Date
source('fcns/essential_fcns.R')
x1<-c("tidyverse","deSolve","gtools","rstudioapi","devtools","wpp2019","Rcpp","lubridate",
"tsibble","pracma","qs","ungeviz","zoo","RcppRoll")
x2 <- x1 %in% row.names(installed.packages()); if (any(x2 == FALSE)) { install.packages(x1[!x2]) }
x1<-c("tidyverse","deSolve","gtools","rstudioapi","devtools","wpp2019","Rcpp","lubridate",
"tsibble","pracma","qs","ungeviz","zoo","RcppRoll")
x2 <- x1 %in% row.names(installed.packages())
x2
row.names(installed.packages())
installed.packages()
x2
x1[!x2]
x1<-c("tidyverse","deSolve","gtools","rstudioapi","devtools","wpp2019","Rcpp","lubridate",
"tsibble","pracma","qs","zoo","RcppRoll") # ,"ungeviz"
x2 <- x1 %in% row.names(installed.packages());
x1[!x2]
k_n
