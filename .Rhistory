# y axis fixed? | facet by AGE only or age+INFECTION? | abs values or fraction?
# all permutations
all_perms=permutations(n=2,r=3,repeats.allowed=T)
scale_val=c('fixed','free_y')[all_perms[k,1]]; facet2tag=c('','infection')[all_perms[k,2]]
value_type=c("value","value_fract")[all_perms[k,3]]
if (grepl("fract",value_type)){y_axis_tag='fraction'} else {y_axis_tag="# cases"}; if (nchar(facet2tag)){nrow_val=6} else{nrow_val=3}
if (nchar(facet2tag)>0) {height_div=1} else{height_div=2}
ggplot(df_ode_solution_tidy[vars_to_show,],aes_string(x="t_years",y=value_type,group="name",color="infection")) + #,linetype="infection"
geom_line(size=1.05) + theme_bw() + standard_theme + theme(axis.text.x=element_text(size=7),axis.text.y=element_text(size=6)) +
facet_wrap(as.formula(paste('~',gsub("^\\+","",paste(facet2tag,'+agegroup_name',sep='')),sep='')),
ncol=round(agegr_lim/height_div),scales=scale_val) +
# ~agegroup_name
scale_x_continuous(breaks=xval_breaks,minor_breaks=seq(0,max_time/365,by=1/12)) + # scale_y_log10(limits=c(0.1,1e6)) +
# shutdown
geom_rect(aes(xmin=shutdown_limits[1]/365,xmax=shutdown_limits[2]/365,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
xlab('years') + ylab(y_axis_tag) + ggtitle('RSV infections by age group (SIRS simulation)')
ggplot(df_ode_solution_tidy[vars_to_show,],aes_string(x="t_years",y=value_type,group="name",color="infection")) + #,linetype="infection"
geom_line(size=1.05) + theme_bw() + standard_theme + theme(axis.text.x=element_text(size=7),axis.text.y=element_text(size=6)) +
facet_grid(as.formula(paste('~',gsub("^\\+","",paste(facet2tag,'+agegroup_name',sep='')),sep='')),
ncol=round(agegr_lim/height_div),scales=scale_val) +
# ~agegroup_name
scale_x_continuous(breaks=xval_breaks,minor_breaks=seq(0,max_time/365,by=1/12)) + # scale_y_log10(limits=c(0.1,1e6)) +
# shutdown
geom_rect(aes(xmin=shutdown_limits[1]/365,xmax=shutdown_limits[2]/365,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
xlab('years') + ylab(y_axis_tag) + ggtitle('RSV infections by age group (SIRS simulation)')
if (length(unique(round(array(delta_susc_prop),5)))==length(delta_primary)){foldername="suscept_noagedep"}else{foldername="suscept_agedep"}
timecourse_filename=fun_create_filename(paste0("simul_output/",foldername),facet2tag,value_type,n_age,gsub("_y","",scale_val),"png")
ggsave(timecourse_filename,width=32,height=18,units="cm")
ggplot(df_ode_solution_tidy[vars_to_show,],aes_string(x="t_years",y=value_type,group="name",color="infection")) + #,linetype="infection"
geom_line(size=1.05) + theme_bw() + standard_theme + theme(axis.text.x=element_text(size=7),axis.text.y=element_text(size=6)) +
facet_wrap(as.formula(paste('~',gsub("^\\+","",paste(facet2tag,'+agegroup_name',sep='')),sep='')),
ncol=round(agegr_lim/height_div),scales=scale_val) +
# ~agegroup_name
scale_x_continuous(breaks=xval_breaks,minor_breaks=seq(0,max_time/365,by=1/12)) + # scale_y_log10(limits=c(0.1,1e6)) +
# shutdown
geom_rect(aes(xmin=shutdown_limits[1]/365,xmax=shutdown_limits[2]/365,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
xlab('years') + ylab(y_axis_tag) + ggtitle('RSV infections by age group (SIRS simulation)')
ggsave(timecourse_filename,width=32,height=18,units="cm")
xval_lims=c(floor(shutdown_limits/365)[1]-0.25,max_time/365-0.25); xval_breaks=seq(0,max_time/365,by=1/4); agegr_lim=7
vars_to_show=grepl('I_',df_ode_solution_tidy$name)&(df_ode_solution_tidy$t_years>xval_lims[1]&df_ode_solution_tidy$t_years<xval_lims[2])&
df_ode_solution_tidy$agegroup<=agegr_lim
# y axis fixed? | facet by AGE only or age+INFECTION? | abs values or fraction?
# all permutations
all_perms=permutations(n=2,r=3,repeats.allowed=T)
scale_val=c('fixed','free_y')[all_perms[k,1]]; facet2tag=c('','infection')[all_perms[k,2]]
value_type=c("value","value_fract")[all_perms[k,3]]
if (grepl("fract",value_type)){y_axis_tag='fraction'} else {y_axis_tag="# cases"}; if (nchar(facet2tag)){nrow_val=6} else{nrow_val=3}
if (nchar(facet2tag)>0) {height_div=1} else{height_div=2}
ggplot(df_ode_solution_tidy[vars_to_show,],aes_string(x="t_years",y=value_type,group="name",color="infection")) + #,linetype="infection"
geom_line(size=1.05) + theme_bw() + standard_theme + theme(axis.text.x=element_text(size=7),axis.text.y=element_text(size=6)) +
facet_wrap(as.formula(paste('~',gsub("^\\+","",paste(facet2tag,'+agegroup_name',sep='')),sep='')),
ncol=round(agegr_lim/height_div),scales=scale_val) +
# ~agegroup_name
scale_x_continuous(breaks=xval_breaks,minor_breaks=seq(0,max_time/365,by=1/12)) + # scale_y_log10(limits=c(0.1,1e6)) +
# shutdown
geom_rect(aes(xmin=shutdown_limits[1]/365,xmax=shutdown_limits[2]/365,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
xlab('years') + ylab(y_axis_tag) + ggtitle('RSV infections by age group (SIRS simulation)')
if (length(unique(round(array(delta_susc_prop),5)))==length(delta_primary)){foldername="suscept_noagedep"}else{foldername="suscept_agedep"}
timecourse_filename=fun_create_filename(paste0("simul_output/",foldername),facet2tag,value_type,n_age,gsub("_y","",scale_val),"png")
ggsave(timecourse_filename,width=32,height=18,units="cm")
ggsave(timecourse_filename,width=30,height=18,units="cm")
shutdown_limits/365
ceil(shutdown_limits/365)
ceiling(shutdown_limits/365)
ceiling(shutdown_limits/365)[2]+0.25
ceiling(shutdown_limits/365)[2]+0.15
xval_lims=c(floor(shutdown_limits/365)[1]-0.25,ceiling(shutdown_limits/365)[2]+0.15); xval_breaks=seq(0,max_time/365,by=1/4); agegr_lim=7
vars_to_show=grepl('I_',df_ode_solution_tidy$name)&(df_ode_solution_tidy$t_years>xval_lims[1]&df_ode_solution_tidy$t_years<xval_lims[2])&
df_ode_solution_tidy$agegroup<=agegr_lim
# y axis fixed? | facet by AGE only or age+INFECTION? | abs values or fraction?
scale_val=c('fixed','free_y')[all_perms[k,1]]; facet2tag=c('','infection')[all_perms[k,2]]
value_type=c("value","value_fract")[all_perms[k,3]]
if (grepl("fract",value_type)){y_axis_tag='fraction'} else {y_axis_tag="# cases"}; if (nchar(facet2tag)){nrow_val=6} else{nrow_val=3}
if (nchar(facet2tag)>0) {height_div=1} else{height_div=2}
ggplot(df_ode_solution_tidy[vars_to_show,],aes_string(x="t_years",y=value_type,group="name",color="infection")) + #,linetype="infection"
geom_line(size=1.05) + theme_bw() + standard_theme + theme(axis.text.x=element_text(size=7),axis.text.y=element_text(size=6)) +
facet_wrap(as.formula(paste('~',gsub("^\\+","",paste(facet2tag,'+agegroup_name',sep='')),sep='')),
ncol=round(agegr_lim/height_div),scales=scale_val) + # ~agegroup_name
scale_x_continuous(breaks=xval_breaks,minor_breaks=seq(0,max_time/365,by=1/12)) + ## shutdown:
geom_rect(aes(xmin=shutdown_limits[1]/365,xmax=shutdown_limits[2]/365,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
xlab('years') + ylab(y_axis_tag) + ggtitle('RSV infections by age group (SIRS simulation)')
if (length(unique(round(array(delta_susc_prop),5)))==length(delta_primary)){foldername="suscept_noagedep"}else{foldername="suscept_agedep"}
timecourse_filename=fun_create_filename(paste0("simul_output/",foldername),facet2tag,value_type,n_age,gsub("_y","",scale_val),"png")
ggsave(timecourse_filename,width=30,height=18,units="cm")
for (k in 1:nrow(all_perms)) {
scale_val=c('fixed','free_y')[all_perms[k,1]]; facet2tag=c('','infection')[all_perms[k,2]]
value_type=c("value","value_fract")[all_perms[k,3]]
if (grepl("fract",value_type)){y_axis_tag='fraction'} else {y_axis_tag="# cases"}; if (nchar(facet2tag)){nrow_val=6} else{nrow_val=3}
if (nchar(facet2tag)>0) {height_div=1} else{height_div=2}
# PLOT
ggplot(df_ode_solution_tidy[vars_to_show,],aes_string(x="t_years",y=value_type,group="name",color="infection")) + #,linetype="infection"
geom_line(size=1.05) + theme_bw() + standard_theme + theme(axis.text.x=element_text(size=7),axis.text.y=element_text(size=6)) +
facet_wrap(as.formula(paste('~',gsub("^\\+","",paste(facet2tag,'+agegroup_name',sep='')),sep='')),
ncol=round(agegr_lim/height_div),scales=scale_val) + # ~agegroup_name
scale_x_continuous(breaks=xval_breaks,minor_breaks=seq(0,max_time/365,by=1/12)) + ## shutdown:
geom_rect(aes(xmin=shutdown_limits[1]/365,xmax=shutdown_limits[2]/365,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
xlab('years') + ylab(y_axis_tag) + ggtitle('RSV infections by age group (SIRS simulation)')
## SAVE
if (length(unique(round(array(delta_susc_prop),5)))==length(delta_primary)){foldername="suscept_noagedep"}else{foldername="suscept_agedep"}
timecourse_filename=fun_create_filename(paste0("simul_output/",foldername),facet2tag,value_type,n_age,gsub("_y","",scale_val),"png")
ggsave(timecourse_filename,width=30,height=18,units="cm")}
prop_symptom=1-c(mean(rbeta(1e3,shape1=3,shape2=30)),mean(rbeta(1e3,shape1=9,shape2=43)),mean(rbeta(1e3,shape1=38,shape2=35)),
mean(rbeta(1e3,shape1=36,shape2=11))) # prop_symptom_age=cbind(c(0,1,5,15),c(0.9,4.9,14.9,99),prop_symptom_age);
list_symptom_agegroups=list(1:2,3:7,8:9,10:11)
for (k in 1:3){ a=data.frame(t(rbind(unlist(list_symptom_agegroups),
unlist(sapply(1:length(list_symptom_agegroups), function(x){rep(x,length(list_symptom_agegroups[[x]]))})),
prop_symptom[unlist(sapply(1:length(list_symptom_agegroups), function(x){rep(x,length(list_symptom_agegroups[[x]]))}))]*(1/k) )),
infection=as.character(k) ); if (k==1){df_symptom_prop=a} else{df_symptom_prop=rbind(df_symptom_prop,a)} }
colnames(df_symptom_prop)[1:3]=c("agegroup","sympt_group","sympt_value")
df_symptom_prop
df_ode_solution_tidy_cases=left_join(df_ode_solution_tidy[grepl('I_',df_ode_solution_tidy$name),],df_symptom_prop,by=c("infection","agegroup"))
df_ode_solution_tidy_cases[,"symptom_cases"]=df_ode_solution_tidy_cases$value*df_ode_solution_tidy_cases$sympt_value
df_ode_solution_tidy_cases[,"symptom_cases_fract"]=df_ode_solution_tidy_cases$value_fract*df_ode_solution_tidy_cases$sympt_value
df_ode_solution_tidy_cases_sum = df_ode_solution_tidy_cases %>% group_by(t_years,compartment,agegroup,agegroup_name) %>%
summarise(symptom_cases=sum(symptom_cases),symptom_cases_fract=sum(symptom_cases_fract))
vars_to_show=df_ode_solution_tidy_cases_sum$t_years>6.75 & df_ode_solution_tidy_cases_sum$t_years<10.15 &
df_ode_solution_tidy_cases_sum$agegroup<7; plot_perms=permutations(n=2,r=2,repeats.allowed=T)
scale_val=c("free","fixed")[plot_perms[k_plot,1]]; vartype=c("symptom_cases_fract","symptom_cases")[plot_perms[k_plot,2]]
if (grepl("fract",vartype)){y_axis_tag='fraction'} else {y_axis_tag="# cases"}
ggplot(df_ode_solution_tidy_cases_sum[vars_to_show,],aes(x=t_years,y=symptom_cases_fract,group=compartment,color=compartment)) +
geom_line(size=1.05) + theme_bw() + standard_theme + theme(axis.text.x=element_text(size=8),axis.text.y=element_text(size=8)) +
facet_wrap(~agegroup_name,scales=scale_val) + # df_ode_solution_tidy_cases$agegroup
scale_x_continuous(breaks=xval_breaks,minor_breaks=seq(0,max_time/365,by=1/12)) + scale_y_continuous(breaks=(0:10)/10) +
geom_rect(aes(xmin=shutdown_limits[1]/365,xmax=shutdown_limits[2]/365,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
xlab('years') + ylab(y_axis_tag) + ggtitle('symptomatic cases by age group (age-structured SIRS model)') + theme(legend.position='none')
k_plot
ggplot(df_ode_solution_tidy_cases_sum[vars_to_show,],aes(x=t_years,y=symptom_cases_fract,group=compartment,color=compartment)) +
geom_line(size=1.05) + theme_bw() + standard_theme + theme(axis.text.x=element_text(size=8),axis.text.y=element_text(size=8)) +
facet_wrap(~agegroup_name,scales=scale_val)
View(df_ode_solution_tidy_cases_sum)
View(df_ode_solution_tidy_cases)
df_symptom_prop
unique(df_ode_solution_tidy$infection)
paste0("infection #",as.character(k))
for (k in 1:3){a=data.frame(t(rbind(unlist(list_symptom_agegroups),
unlist(sapply(1:length(list_symptom_agegroups), function(x){rep(x,length(list_symptom_agegroups[[x]]))})),
prop_symptom[unlist(sapply(1:length(list_symptom_agegroups), function(x){rep(x,length(list_symptom_agegroups[[x]]))}))]*(1/k) )),
infection=paste0("infection #",as.character(k)) ); if (k==1){df_symptom_prop=a} else{df_symptom_prop=rbind(df_symptom_prop,a)} }
colnames(df_symptom_prop)[1:3]=c("agegroup","sympt_group","sympt_value")
df_ode_solution_tidy_cases=left_join(df_ode_solution_tidy[grepl('I_',df_ode_solution_tidy$name),],df_symptom_prop,by=c("infection","agegroup"))
df_ode_solution_tidy_cases[,"symptom_cases"]=df_ode_solution_tidy_cases$value*df_ode_solution_tidy_cases$sympt_value
df_ode_solution_tidy_cases[,"symptom_cases_fract"]=df_ode_solution_tidy_cases$value_fract*df_ode_solution_tidy_cases$sympt_value
df_ode_solution_tidy_cases_sum = df_ode_solution_tidy_cases %>% group_by(t_years,compartment,agegroup,agegroup_name) %>%
summarise(symptom_cases=sum(symptom_cases),symptom_cases_fract=sum(symptom_cases_fract))
vars_to_show=df_ode_solution_tidy_cases_sum$t_years>6.75 & df_ode_solution_tidy_cases_sum$t_years<10.15 &
df_ode_solution_tidy_cases_sum$agegroup<7; plot_perms=permutations(n=2,r=2,repeats.allowed=T)
scale_val=c("free","fixed")[plot_perms[k_plot,1]]; vartype=c("symptom_cases_fract","symptom_cases")[plot_perms[k_plot,2]]
if (grepl("fract",vartype)){y_axis_tag='fraction'} else {y_axis_tag="# cases"}
ggplot(df_ode_solution_tidy_cases_sum[vars_to_show,],aes(x=t_years,y=symptom_cases_fract,group=compartment,color=compartment)) +
geom_line(size=1.05) + theme_bw() + standard_theme + theme(axis.text.x=element_text(size=8),axis.text.y=element_text(size=8)) +
facet_wrap(~agegroup_name,scales=scale_val) + # df_ode_solution_tidy_cases$agegroup
scale_x_continuous(breaks=xval_breaks,minor_breaks=seq(0,max_time/365,by=1/12)) + scale_y_continuous(breaks=(0:10)/10) +
geom_rect(aes(xmin=shutdown_limits[1]/365,xmax=shutdown_limits[2]/365,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
xlab('years') + ylab(y_axis_tag) + ggtitle('symptomatic cases by age group (age-structured SIRS model)') + theme(legend.position='none')
for (k_plot in 1:nrow(permutations(n=2,r=2,repeats.allowed=T))){
scale_val=c("free","fixed")[plot_perms[k_plot,1]]; vartype=c("symptom_cases_fract","symptom_cases")[plot_perms[k_plot,2]]
if (grepl("fract",vartype)){y_axis_tag='fraction'} else {y_axis_tag="# cases"}
ggplot(df_ode_solution_tidy_cases_sum[vars_to_show,],aes(x=t_years,y=symptom_cases_fract,group=compartment,color=compartment)) +
geom_line(size=1.05) + theme_bw() + standard_theme + theme(axis.text.x=element_text(size=8),axis.text.y=element_text(size=8)) +
facet_wrap(~agegroup_name,scales=scale_val) + # df_ode_solution_tidy_cases$agegroup
scale_x_continuous(breaks=xval_breaks,minor_breaks=seq(0,max_time/365,by=1/12)) + scale_y_continuous(breaks=(0:10)/10) +
geom_rect(aes(xmin=shutdown_limits[1]/365,xmax=shutdown_limits[2]/365,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
xlab('years') + ylab(y_axis_tag) + ggtitle('symptomatic cases by age group (age-structured SIRS model)') + theme(legend.position='none')
# SAVE
if (diff(sapply(apply(df_symptom_prop[,c("sympt_value","sympt_group")],2,unique),length))<0){dep_tag="_ageexpdep"}else{dep_tag="_agedep_only"}
if (length(unique(round(array(delta_susc_prop),5)))==length(delta_primary)){foldername="suscept_noagedep"}else{foldername="suscept_agedep"}
ggsave(paste0("simul_output/",foldername,"/RSV_DE_symptomcases_sever",dep_tag,"_y",scale_val,'_',gsub("# ","",y_axis_tag),".png"),width=32,height=22,units="cm")
}
foldername
dep_tag
paste0("symptomcases_sever",dep_tag)
foldername
paste0("simul_output/",foldername,paste0("/symptomcases_sever",dep_tag),"/RSV_DE_symptomcases_sever",dep_tag,"_y",scale_val,'_',gsub("# ","",y_axis_tag),".png")
full_filename=paste0("simul_output/",foldername,paste0("/symptomcases_sever",dep_tag),"/RSV_DE_symptomcases_sever",dep_tag,"_y",scale_val,'_',gsub("# ","",y_axis_tag),".png")
severity_agedep=1
severity_agedep
rm(severity_agedep)
sever_agedep=1
sever_agedep=0
for (k in 1:3){ a=data.frame(t(rbind(unlist(list_symptom_agegroups),
unlist(sapply(1:length(list_symptom_agegroups), function(x){rep(x,length(list_symptom_agegroups[[x]]))})),
prop_symptom[unlist(sapply(1:length(list_symptom_agegroups), function(x){rep(x,length(list_symptom_agegroups[[x]]))}))]*(1/k^sever_agedep) )),
infection=paste0("infection #",as.character(k)) ); if (k==1){df_symptom_prop=a} else{df_symptom_prop=rbind(df_symptom_prop,a)} }
colnames(df_symptom_prop)[1:3]=c("agegroup","sympt_group","sympt_value")
df_symptom_prop
df_ode_solution_tidy_cases=left_join(df_ode_solution_tidy[grepl('I_',df_ode_solution_tidy$name),],df_symptom_prop,by=c("infection","agegroup"))
df_ode_solution_tidy_cases[,"symptom_cases"]=df_ode_solution_tidy_cases$value*df_ode_solution_tidy_cases$sympt_value
df_ode_solution_tidy_cases[,"symptom_cases_fract"]=df_ode_solution_tidy_cases$value_fract*df_ode_solution_tidy_cases$sympt_value
# plot sum of 1,2,3rd infections
df_ode_solution_tidy_cases_sum=df_ode_solution_tidy_cases %>% group_by(t_years,compartment,agegroup,agegroup_name) %>%
summarise(symptom_cases=sum(symptom_cases),symptom_cases_fract=sum(symptom_cases_fract))
# time window of plot
vars_to_show=df_ode_solution_tidy_cases_sum$t_years>6.75 & df_ode_solution_tidy_cases_sum$t_years<10.15 &
df_ode_solution_tidy_cases_sum$agegroup<7; plot_perms=permutations(n=2,r=2,repeats.allowed=T)
scale_val=c("free","fixed")[plot_perms[k_plot,1]]; vartype=c("symptom_cases_fract","symptom_cases")[plot_perms[k_plot,2]]
if (grepl("fract",vartype)){y_axis_tag='fraction'} else {y_axis_tag="# cases"}
ggplot(df_ode_solution_tidy_cases_sum[vars_to_show,],aes(x=t_years,y=symptom_cases_fract,group=compartment,color=compartment)) +
geom_line(size=1.05) + theme_bw() + standard_theme + theme(axis.text.x=element_text(size=8),axis.text.y=element_text(size=8)) +
facet_wrap(~agegroup_name,scales=scale_val) + # df_ode_solution_tidy_cases$agegroup
scale_x_continuous(breaks=xval_breaks,minor_breaks=seq(0,max_time/365,by=1/12)) + scale_y_continuous(breaks=(0:10)/10) +
geom_rect(aes(xmin=shutdown_limits[1]/365,xmax=shutdown_limits[2]/365,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
xlab('years') + ylab(y_axis_tag) + ggtitle('symptomatic cases by age group (age-structured SIRS model)') + theme(legend.position='none')
paste0("/symptomcases_sever",dep_tag)
if (diff(sapply(apply(df_symptom_prop[,c("sympt_value","sympt_group")],2,unique),length))<0){dep_tag="_ageexpdep"}else{dep_tag="_agedep_only"}
if (length(unique(round(array(delta_susc_prop),5)))==length(delta_primary)){foldername="suscept_noagedep"}else{foldername="suscept_agedep"}
sapply(apply(df_symptom_prop[,c("sympt_value","sympt_group")],2,unique),length)
apply(df_symptom_prop[,c("sympt_value","sympt_group")],2,unique)
sapply(apply(df_symptom_prop[,c("sympt_value","sympt_group")],2,unique),length)
apply(df_symptom_prop[,c("sympt_value","sympt_group")],2,unique)
df_symptom_prop[,c("sympt_value")]
unique(df_symptom_prop[,c("sympt_value")])
length(unique(df_symptom_prop[,c("sympt_value")]))
length(unique(df_symptom_prop[,c("sympt_group")]))
symptvals=length(unique(df_symptom_prop[,c("sympt_value")])); symptagegrval=length(unique(df_symptom_prop[,c("sympt_group")]))
symptvals
symptagegrval
if (symptvals>symptagegrval){dep_tag="_ageexpdep"}else{dep_tag="_agedep_only"}
dep_tag
if (length(unique(round(array(delta_susc_prop),5)))==length(delta_primary)){foldername="suscept_noagedep"}else{foldername="suscept_agedep"}
paste0("/symptomcases_sever",dep_tag)
full_filename=paste0("simul_output/",foldername,paste0("/symptomcases_sever",dep_tag),"/RSV_DE_symptomcases_sever",dep_tag,"_y",scale_val,'_',gsub("# ","",y_axis_tag),".png")
full_filename
for (k_plot in 1:nrow(permutations(n=2,r=2,repeats.allowed=T))){
scale_val=c("free","fixed")[plot_perms[k_plot,1]]; vartype=c("symptom_cases_fract","symptom_cases")[plot_perms[k_plot,2]]
if (grepl("fract",vartype)){y_axis_tag='fraction'} else {y_axis_tag="# cases"}
ggplot(df_ode_solution_tidy_cases_sum[vars_to_show,],aes(x=t_years,y=symptom_cases_fract,group=compartment,color=compartment)) +
geom_line(size=1.05) + theme_bw() + standard_theme + theme(axis.text.x=element_text(size=8),axis.text.y=element_text(size=8)) +
facet_wrap(~agegroup_name,scales=scale_val) + # df_ode_solution_tidy_cases$agegroup
scale_x_continuous(breaks=xval_breaks,minor_breaks=seq(0,max_time/365,by=1/12)) + scale_y_continuous(breaks=(0:10)/10) +
geom_rect(aes(xmin=shutdown_limits[1]/365,xmax=shutdown_limits[2]/365,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
xlab('years') + ylab(y_axis_tag) + ggtitle('symptomatic cases by age group (age-structured SIRS model)') + theme(legend.position='none')
# SAVE
symptvals=length(unique(df_symptom_prop[,c("sympt_value")])); symptagegrval=length(unique(df_symptom_prop[,c("sympt_group")]))
if (symptvals>symptagegrval){dep_tag="_ageexpdep"}else{dep_tag="_agedep_only"}
if (length(unique(round(array(delta_susc_prop),5)))==length(delta_primary)){foldername="suscept_noagedep"}else{foldername="suscept_agedep"}
full_filename=paste0("simul_output/",foldername,paste0("/symptomcases_sever",dep_tag),"/RSV_DE_symptomcases_sever",dep_tag,"_y",scale_val,'_',gsub("# ","",y_axis_tag),".png")
ggsave(full_filename,width=32,height=22,units="cm")
}
shutdown_limits
shutdown_limits/365
floor(shutdown_limits/365)
floor(shutdown_limits/365)[2]
df_ode_solution_tidy_cases_sum$season=findInterval(df_ode_solution_tidy_cases_sum$t_years,c(0,(1:10)+0.51))
season_peaks=df_ode_solution_tidy_cases_sum %>% group_by(agegroup,agegroup_name,season) %>% summarise(max_case=max(symptom_cases)) %>%
group_by(season) %>% mutate(max_case_share_season=max_case/sum(max_case))
season_peaks[,"pre_post_shtdn"]=1; season_peaks$pre_post_shtdn[season_peaks$season>=ceiling(max(shutdown_limits/365))]=1.5
season_truthvals=season_peaks$agegroup<=floor(shutdown_limits/365)[1] & !season_peaks$season==floor(shutdown_limits/365)[2] & season_peaks$season>3
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + geom_point(aes(size=pre_post_shtdn*5,shape=factor(pre_post_shtdn))) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12)) +
xlab("age group") + ylab("fraction of all cases in season") + scale_size_continuous(guide=FALSE) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown")
View(season_peaks)
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + geom_point(aes(size=pre_post_shtdn*5,shape=factor(pre_post_shtdn))) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12)) +
xlab("age group") + ylab("fraction of all cases in season") + scale_size_continuous(guide=FALSE) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown")
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + geom_point(aes(size=pre_post_shtdn*5,shape=factor(pre_post_shtdn))) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_continuous(guide=FALSE) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown")
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + geom_point(aes(shape=factor(pre_post_shtdn))) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_continuous(guide=FALSE) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown")
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + geom_point(aes(size=pre_post_shtdn*5,shape=factor(pre_post_shtdn))) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_continuous() + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown")
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + geom_point(aes(size=pre_post_shtdn*5,shape=factor(pre_post_shtdn))) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_discrete(values=c(1,2)) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown")
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + geom_point(aes(size=pre_post_shtdn*5,shape=factor(pre_post_shtdn))) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(1,2)) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown")
season_peaks[,"pre_post_shtdn"]="pre"; season_peaks$pre_post_shtdn[season_peaks$season>=ceiling(max(shutdown_limits/365))]="post"
season_truthvals=season_peaks$agegroup<=floor(shutdown_limits/365)[1] & !season_peaks$season==floor(shutdown_limits/365)[2] & season_peaks$season>3
# PLOT
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + geom_point(aes(size=pre_post_shtdn*5,shape=factor(pre_post_shtdn))) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(1,2)) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown")
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + geom_point(aes(size=pre_post_shtdn,shape=factor(pre_post_shtdn))) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(1,2)) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown")
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + geom_point(aes(size=pre_post_shtdn,shape=factor(pre_post_shtdn))) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(3,1)) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown")
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + geom_point(aes(size=pre_post_shtdn,shape=factor(pre_post_shtdn))) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),legend.text = element_text(size=14)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(3,1)) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown")
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + geom_point(aes(size=pre_post_shtdn,shape=factor(pre_post_shtdn))) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),legend.text=element_text(size=12),legend.title=element_text(size=14)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(3,1)) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown")
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + theme_bw() + standard_theme + # + geom_point(aes(size=pre_post_shtdn,shape=factor(pre_post_shtdn)))
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),legend.text=element_text(size=12),legend.title=element_text(size=14)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(3,1)) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown")
if (length(unique(round(array(delta_susc_prop),5)))==length(delta_primary)){foldername="suscept_noagedep"}else{foldername="suscept_agedep"}
symptvals=length(unique(df_symptom_prop[,c("sympt_value")])); symptagegrval=length(unique(df_symptom_prop[,c("sympt_group")]))
if (symptvals>symptagegrval){dep_tag="_ageexpdep"}else{dep_tag="_agedep_only"}
paste0("simul_output/",foldername,"/age_distrib_under5yr_suscept",dep_tag,".png")
ggsave(paste0("simul_output/",foldername,"/age_distrib_under5yr_suscept",dep_tag,".png"),width=32,height=22,units="cm")
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + theme_bw() + standard_theme + # + geom_point(aes(size=pre_post_shtdn,shape=factor(pre_post_shtdn)))
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),legend.text=element_text(size=12),legend.title=element_text(size=14)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(3,1)) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown") + ylim(0.05,0.16)
ylimvals=c(0.05,0.16)
ylimvals
ylimvals=c(0.05,0.175)
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + theme_bw() + standard_theme + scale_y_continuous()
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),legend.text=element_text(size=12),legend.title=element_text(size=14)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(3,1)) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown") + ylim(ylimvals)
seq(ylimvals[1],ylimvals[2],by=0.01)
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + theme_bw() + standard_theme + scale_y_continuous(breaks=seq(ylimvals[1],ylimvals[2],by=0.01)) +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),legend.text=element_text(size=12),legend.title=element_text(size=14)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(3,1)) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown") + ylim(ylimvals)
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + theme_bw() + standard_theme + scale_y_continuous(breaks=seq(ylimvals[1],ylimvals[2],by=0.01)) +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),legend.text=element_text(size=12),legend.title=element_text(size=14)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(3,1)) + # range=c(1, 2), guide=FALSE
labs(color="season",shape="before/after shutdown",size="before/after shutdown")
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),legend.text=element_text(size=12),legend.title=element_text(size=14)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(3,1)) + # range=c(1, 2), guide=FALSE
scale_y_continuous(breaks=seq(ylimvals[1],ylimvals[2],by=0.01),limits=ylimvals) +
labs(color="season",shape="before/after shutdown",size="before/after shutdown") # + ylim(ylimvals)
if (length(unique(round(array(delta_susc_prop),5)))==length(delta_primary)){foldername="suscept_noagedep"}else{foldername="suscept_agedep"}
symptvals=length(unique(df_symptom_prop[,c("sympt_value")])); symptagegrval=length(unique(df_symptom_prop[,c("sympt_group")]))
if (symptvals>symptagegrval){dep_tag="_ageexpdep"}else{dep_tag="_agedep_only"}
ggsave(paste0("simul_output/",foldername,"/age_distrib_under5yr_suscept",dep_tag,".png"),width=32,height=22,units="cm")
sever_agedep=1
for (k in 1:3){ a=data.frame(t(rbind(unlist(list_symptom_agegroups),
unlist(sapply(1:length(list_symptom_agegroups), function(x){rep(x,length(list_symptom_agegroups[[x]]))})),
prop_symptom[unlist(sapply(1:length(list_symptom_agegroups), function(x){rep(x,length(list_symptom_agegroups[[x]]))}))]*(1/k^sever_agedep) )),
infection=paste0("infection #",as.character(k)) ); if (k==1){df_symptom_prop=a} else{df_symptom_prop=rbind(df_symptom_prop,a)} }
colnames(df_symptom_prop)[1:3]=c("agegroup","sympt_group","sympt_value")
# calculate symptom cases
df_ode_solution_tidy_cases=left_join(df_ode_solution_tidy[grepl('I_',df_ode_solution_tidy$name),],df_symptom_prop,by=c("infection","agegroup"))
df_ode_solution_tidy_cases[,"symptom_cases"]=df_ode_solution_tidy_cases$value*df_ode_solution_tidy_cases$sympt_value
df_ode_solution_tidy_cases[,"symptom_cases_fract"]=df_ode_solution_tidy_cases$value_fract*df_ode_solution_tidy_cases$sympt_value
# plot sum of 1,2,3rd infections
df_ode_solution_tidy_cases_sum=df_ode_solution_tidy_cases %>% group_by(t_years,compartment,agegroup,agegroup_name) %>%
summarise(symptom_cases=sum(symptom_cases),symptom_cases_fract=sum(symptom_cases_fract))
# time window of plot
vars_to_show=df_ode_solution_tidy_cases_sum$t_years>6.75 & df_ode_solution_tidy_cases_sum$t_years<10.15 &
df_ode_solution_tidy_cases_sum$agegroup<7; plot_perms=permutations(n=2,r=2,repeats.allowed=T)
scale_val=c("free","fixed")[plot_perms[k_plot,1]]; vartype=c("symptom_cases_fract","symptom_cases")[plot_perms[k_plot,2]]
if (grepl("fract",vartype)){y_axis_tag='fraction'} else {y_axis_tag="# cases"}
ggplot(df_ode_solution_tidy_cases_sum[vars_to_show,],aes(x=t_years,y=symptom_cases_fract,group=compartment,color=compartment)) +
geom_line(size=1.05) + theme_bw() + standard_theme + theme(axis.text.x=element_text(size=8),axis.text.y=element_text(size=8)) +
facet_wrap(~agegroup_name,scales=scale_val) + # df_ode_solution_tidy_cases$agegroup
scale_x_continuous(breaks=xval_breaks,minor_breaks=seq(0,max_time/365,by=1/12)) + scale_y_continuous(breaks=(0:10)/10) +
geom_rect(aes(xmin=shutdown_limits[1]/365,xmax=shutdown_limits[2]/365,ymin=0,ymax=Inf),fill="pink",color=NA,alpha=0.01) +
xlab('years') + ylab(y_axis_tag) + ggtitle('symptomatic cases by age group (age-structured SIRS model)') + theme(legend.position='none')
# SAVE
symptvals=length(unique(df_symptom_prop[,c("sympt_value")])); symptagegrval=length(unique(df_symptom_prop[,c("sympt_group")]))
if (symptvals>symptagegrval){dep_tag="_ageexpdep"}else{dep_tag="_agedep_only"}
if (length(unique(round(array(delta_susc_prop),5)))==length(delta_primary)){foldername="suscept_noagedep"}else{foldername="suscept_agedep"}
full_filename=paste0("simul_output/",foldername,paste0("/symptomcases_sever",dep_tag),"/RSV_DE_symptomcases_sever",
dep_tag,"_y",scale_val,'_',gsub("# ","",y_axis_tag),".png")
df_ode_solution_tidy_cases_sum$season=findInterval(df_ode_solution_tidy_cases_sum$t_years,c(0,(1:10)+0.51))
season_peaks=df_ode_solution_tidy_cases_sum %>% group_by(agegroup,agegroup_name,season) %>% summarise(max_case=max(symptom_cases)) %>%
group_by(season) %>% mutate(max_case_share_season=max_case/sum(max_case))
season_peaks[,"pre_post_shtdn"]="pre"; season_peaks$pre_post_shtdn[season_peaks$season>=ceiling(max(shutdown_limits/365))]="post"
season_truthvals=season_peaks$agegroup<=floor(shutdown_limits/365)[1] & !season_peaks$season==floor(shutdown_limits/365)[2] & season_peaks$season>3
ylimvals=c(0.05,0.175)
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),legend.text=element_text(size=12),legend.title=element_text(size=14)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(3,1)) + # range=c(1, 2), guide=FALSE
scale_y_continuous(breaks=seq(ylimvals[1],ylimvals[2],by=0.01),limits=ylimvals) +
labs(color="season",shape="before/after shutdown",size="before/after shutdown") # + ylim(ylimvals)
ylimvals=c(0.05,0.16)
# PLOT
ggplot(season_peaks[season_truthvals,],aes(x=agegroup_name,y=max_case_share_season,group=season,color=factor(season))) +
geom_line(aes(size=pre_post_shtdn)) + theme_bw() + standard_theme +
theme(axis.text.x=element_text(size=12),axis.text.y=element_text(size=12),legend.text=element_text(size=12),legend.title=element_text(size=14)) +
xlab("") + ylab("fraction of all cases in season") + scale_size_manual(values=c(3,1)) + # range=c(1, 2), guide=FALSE
scale_y_continuous(breaks=seq(ylimvals[1],ylimvals[2],by=0.01),limits=ylimvals) +
labs(color="season",shape="before/after shutdown",size="before/after shutdown") # + ylim(ylimvals)
if (length(unique(round(array(delta_susc_prop),5)))==length(delta_primary)){foldername="suscept_noagedep"}else{foldername="suscept_agedep"}
symptvals=length(unique(df_symptom_prop[,c("sympt_value")])); symptagegrval=length(unique(df_symptom_prop[,c("sympt_group")]))
if (symptvals>symptagegrval){dep_tag="_ageexpdep"}else{dep_tag="_agedep_only"}
ggsave(paste0("simul_output/",foldername,"/age_distrib_under5yr_suscept",dep_tag,".png"),width=32,height=22,units="cm")
View(rsv_age_groups)
resp_virus_data_uk=read_csv("data/Respiratory viral defections by any method UK Ages.csv")
resp_virus_data_uk_tidy=resp_virus_data_uk[,!colnames(resp_virus_data_uk) %in% "X1"] %>% pivot_longer(!c("Year","startweek","Age"))
resp_virus_data_uk_tidy$Age=factor(resp_virus_data_uk_tidy$Age,levels=unique(resp_virus_data_uk_tidy$Age))
truthvals_rsv=resp_virus_data_uk_tidy$name %in% "RSV" & (!resp_virus_data_uk_tidy$Year %in% c(2014,2020))
# means across years
averages_years=data.frame(resp_virus_data_uk_tidy[truthvals_rsv,] %>% group_by(startweek,Age) %>%
summarise(value=mean(value)),Year='mean',name='RSV')
if (!any(resp_virus_data_uk_tidy$Year %in% "mean")){
resp_virus_data_uk_tidy=rbind(resp_virus_data_uk_tidy,averages_years[,colnames(resp_virus_data_uk_tidy)])}
truthvals_rsv=resp_virus_data_uk_tidy$name %in% "RSV" & (!resp_virus_data_uk_tidy$Year %in% c(2014,2020))
resp_virus_data_uk_tidy[,"type"]="indiv year"; resp_virus_data_uk_tidy[resp_virus_data_uk_tidy$Year %in% "mean","type"]="5-year average"
resp_virus_data_uk_tidy[,"width"]=1.01; resp_virus_data_uk_tidy[resp_virus_data_uk_tidy$Year %in% "mean","width"]=1.015
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year,linetype=factor(type),size=width)) +
geom_line() + geom_point(aes(shape=factor(type))) + facet_wrap(~Age,scales="free") + scale_linetype_manual(values=c("solid","dashed")) +
scale_size(range=c(1,1.5), guide=FALSE) + labs(shape="data type",linetype="data type") + theme_bw() + standard_theme + ylab("")
leaveout_year=c(2014); truthvals_rsv=resp_virus_data_uk_tidy$name %in% "RSV" & (!resp_virus_data_uk_tidy$Year %in% leaveout_year)
# means across years
averages_years=data.frame(resp_virus_data_uk_tidy[truthvals_rsv,] %>% group_by(startweek,Age) %>%
summarise(value=mean(value)),Year='mean',name='RSV')
if (!any(resp_virus_data_uk_tidy$Year %in% "mean")){
resp_virus_data_uk_tidy=rbind(resp_virus_data_uk_tidy,averages_years[,colnames(resp_virus_data_uk_tidy)])}
truthvals_rsv=resp_virus_data_uk_tidy$name %in% "RSV" & (!resp_virus_data_uk_tidy$Year %in% leaveout_year)
resp_virus_data_uk_tidy[,"type"]="indiv year"; resp_virus_data_uk_tidy[resp_virus_data_uk_tidy$Year %in% "mean","type"]="5-year average"
resp_virus_data_uk_tidy[,"width"]=1.01; resp_virus_data_uk_tidy[resp_virus_data_uk_tidy$Year %in% "mean","width"]=1.015
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year,linetype=factor(type),size=width)) +
geom_line() + geom_point(aes(shape=factor(type))) + facet_wrap(~Age,scales="free") + scale_linetype_manual(values=c("solid","dashed")) +
scale_size(range=c(1,1.5), guide=FALSE) + labs(shape="data type",linetype="data type") + theme_bw() + standard_theme + ylab("")
View(resp_virus_data_uk_tidy)
truthvals_rsv=(resp_virus_data_uk_tidy$name %in% "RSV") & (!resp_virus_data_uk_tidy$Year %in% c(leaveout_year,"mean"))
resp_virus_data_uk_tidy[,"type"]="indiv year"; resp_virus_data_uk_tidy[resp_virus_data_uk_tidy$Year %in% "mean","type"]="5-year average"
resp_virus_data_uk_tidy[,"width"]=1.01; resp_virus_data_uk_tidy[resp_virus_data_uk_tidy$Year %in% "mean","width"]=1.015
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year,linetype=factor(type),size=width)) +
geom_line() + geom_point(aes(shape=factor(type))) + facet_wrap(~Age,scales="free") + scale_linetype_manual(values=c("solid","dashed")) +
scale_size(range=c(1,1.5), guide=FALSE) + labs(shape="data type",linetype="data type") + theme_bw() + standard_theme + ylab("")
truthvals_rsv=(resp_virus_data_uk_tidy$name %in% "RSV") & resp_virus_data_uk_tidy$Year %in% c("mean",2020)
resp_virus_data_uk_tidy[,"type"]="indiv year"; resp_virus_data_uk_tidy[resp_virus_data_uk_tidy$Year %in% "mean","type"]="5-year average"
resp_virus_data_uk_tidy[,"width"]=1.01; resp_virus_data_uk_tidy[resp_virus_data_uk_tidy$Year %in% "mean","width"]=1.015
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year,linetype=factor(type),size=width)) +
geom_line() + geom_point(aes(shape=factor(type))) + facet_wrap(~Age,scales="free") + scale_linetype_manual(values=c("solid","dashed")) +
scale_size(range=c(1,1.5), guide=FALSE) + labs(shape="data type",linetype="data type") + theme_bw() + standard_theme + ylab("")
resp_virus_data_uk=read_csv("data/Respiratory viral defections by any method UK Ages.csv")
head(799
)
head(resp_virus_data_uk)
resp_virus_data_uk_tidy=resp_virus_data_uk %>% pivot_longer(!c("Year","startweek","Age"))
resp_virus_data_uk_tidy$Age=factor(resp_virus_data_uk_tidy$Age,levels=unique(resp_virus_data_uk_tidy$Age))
leaveout_year=c(2014); truthvals_rsv=resp_virus_data_uk_tidy$name %in% "RSV" & (!resp_virus_data_uk_tidy$Year %in% leaveout_year)
# means across years
averages_years=data.frame(resp_virus_data_uk_tidy[truthvals_rsv,] %>% group_by(startweek,Age) %>%
summarise(value=mean(value)),Year='mean',name='RSV')
if (!any(resp_virus_data_uk_tidy$Year %in% "mean")){
resp_virus_data_uk_tidy=rbind(resp_virus_data_uk_tidy,averages_years[,colnames(resp_virus_data_uk_tidy)])}
truthvals_rsv=(resp_virus_data_uk_tidy$name %in% "RSV") & resp_virus_data_uk_tidy$Year %in% c("mean",2020)
resp_virus_data_uk_tidy[,"type"]="indiv year"; resp_virus_data_uk_tidy[resp_virus_data_uk_tidy$Year %in% "mean","type"]="5-year average"
resp_virus_data_uk_tidy[,"width"]=1.01; resp_virus_data_uk_tidy[resp_virus_data_uk_tidy$Year %in% "mean","width"]=1.015
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year,linetype=factor(type),size=width)) +
geom_line() + geom_point(aes(shape=factor(type))) + facet_wrap(~Age,scales="free") + scale_linetype_manual(values=c("solid","dashed")) +
scale_size(range=c(1,1.5), guide=FALSE) + labs(shape="data type",linetype="data type") + theme_bw() + standard_theme + ylab("")
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year,linetype=factor(type),size=width)) +
geom_line() + geom_point(aes(shape=factor(type)),size=2) + facet_wrap(~Age,scales="free") + scale_linetype_manual(values=c("solid","dashed")) +
scale_size(range=c(1,1.5), guide=FALSE) + labs(shape="data type",linetype="data type") + theme_bw() + standard_theme + ylab("")
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year,linetype=factor(type),size=width)) +
geom_line() + geom_point(aes(shape=factor(type))) + facet_wrap(~Age,scales="free") + scale_linetype_manual(values=c("solid","dashed")) +
labs(shape="data type",linetype="data type") + theme_bw() + standard_theme + ylab("") #scale_size(range=c(1,1.5), guide=FALSE) +
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year,linetype=factor(type),size=width)) +
geom_line() + geom_point(aes(shape=factor(type))) + facet_wrap(~Age,scales="free") + scale_linetype_manual(values=c("solid","dashed")) +
labs(shape="data type",linetype="data type") + theme_bw() + standard_theme + ylab("") + # scale_size(range=c(1,1.5), guide=FALSE) +
scale_size_manual(values = c(1,1.25))
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year,linetype=factor(type),size=factor(width))) +
geom_line() + geom_point(aes(shape=factor(type))) + facet_wrap(~Age,scales="free") + scale_linetype_manual(values=c("solid","dashed")) +
labs(shape="data type",linetype="data type") + theme_bw() + standard_theme + ylab("") + # scale_size(range=c(1,1.5), guide=FALSE) +
scale_size_manual(values = c(1,1.25))
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year,linetype=factor(type),size=factor(width))) +
geom_line() + geom_point(aes(shape=factor(type))) + facet_wrap(~Age,scales="free") + scale_linetype_manual(values=c("solid","dashed")) +
theme_bw() + standard_theme + ylab("") + # scale_size(range=c(1,1.5), guide=FALSE) +
scale_size_manual(values = c(1,1.25),guide=FALSE) + labs(shape="data type",linetype="data type")
ggsave("simul_output/uk_rsv_data2020.png",width=32,height=16,units="cm")
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year,size=factor(width))) + # ,linetype=factor(type)
geom_line() + geom_point(aes(shape=factor(type))) + facet_wrap(~Age,scales="free") + scale_linetype_manual(values=c("solid","dashed")) +
theme_bw() + standard_theme + ylab("") + # scale_size(range=c(1,1.5), guide=FALSE) +
scale_size_manual(values = c(1,1.25),guide=FALSE) + labs(shape="data type") # ,linetype="data type"
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year)) + # ,linetype=factor(type)
geom_line() + geom_point(aes(shape=factor(type),size=factor(width))) + facet_wrap(~Age,scales="free") + scale_linetype_manual(values=c("solid","dashed")) +
theme_bw() + standard_theme + ylab("") + # scale_size(range=c(1,1.5), guide=FALSE) +
scale_size_manual(values = c(1,1.25),guide=FALSE) + labs(shape="data type") # ,linetype="data type"
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year)) + # ,linetype=factor(type)
geom_line() + geom_point(aes(shape=factor(type),size=factor(width))) + facet_wrap(~Age,scales="free") + scale_linetype_manual(values=c("solid","dashed")) +
theme_bw() + standard_theme + ylab("") + # scale_size(range=c(1,1.5), guide=FALSE) +
scale_size_manual(values = c(1.5,2),guide=FALSE) + labs(shape="data type") # ,linetype="data type"
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year)) + # ,linetype=factor(type)
geom_line(size=1.5) + geom_point(aes(shape=factor(type),size=factor(width))) + facet_wrap(~Age,scales="free") +
scale_linetype_manual(values=c("solid","dashed")) + theme_bw() + standard_theme + ylab("") + # scale_size(range=c(1,1.5), guide=FALSE) +
scale_size_manual(values = c(1.5,2),guide=FALSE) + labs(shape="data type") # ,linetype="data type"
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year)) + # ,linetype=factor(type)
geom_line(size=1.25) + geom_point(aes(shape=factor(type),size=factor(width))) + facet_wrap(~Age,scales="free") +
scale_linetype_manual(values=c("solid","dashed")) + theme_bw() + standard_theme + ylab("") + # scale_size(range=c(1,1.5), guide=FALSE) +
scale_size_manual(values = c(1.5,2),guide=FALSE) + labs(shape="data type") # ,linetype="data type"
ggplot(resp_virus_data_uk_tidy[truthvals_rsv,],aes(x=startweek,y=value,group=Year,color=Year)) + # ,linetype=factor(type)
geom_line(size=1.25) + geom_point(aes(shape=factor(type),size=factor(width))) + facet_wrap(~Age,scales="free") +
scale_x_continuous(breaks=(0:10)*5) + scale_linetype_manual(values=c("solid","dashed")) + theme_bw() + standard_theme + ylab("") +
scale_size_manual(values = c(1.5,2),guide=FALSE) + labs(shape="data type") # ,linetype="data type"
ggsave("simul_output/uk_rsv_data2020.png",width=32,height=16,units="cm")
